Терминалы не используются в грамматике

    EOL
    END_STMT
    FORMAT
    COLON
    PARAM


Грамматика

    0 $accept: program $end

    1 program: program_head program_body program_end END_OF_FILE
    2        | program_body program_end END_OF_FILE

    3 program_head: nonexec_stmt
    4             | COMMENT
    5             | program_head nonexec_stmt
    6             | program_head COMMENT

    7 program_body: PROGRAM stmts
    8             | exec_stmt stmts

    9 program_end: END COMMENT
   10            | program_end COMMENT

   11 stmts: COMMENT
   12      | stmts COMMENT
   13      | stmts stmt

   14 stmt: exec_stmt COMMENT
   15     | nonexec_stmt COMMENT

   16 exec_stmt: assign_stmt
   17          | control_stmt
   18          | io_stmt
   19          | NUMBER exec_stmt

   20 control_stmt: if_stmt
   21             | do_stmt
   22             | fn_call
   23             | GOTO aexp
   24             | CONTINUE
   25             | RETURN
   26             | BREAK
   27             | STOP
   28             | PAUSE aexp

   29 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF

   33 elseif_stmt: ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts
   34            | elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts

   35 do_stmt: DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | DO WHILE aexp stmts ENDDO

   38 io_stmt: read_stmt
   39        | write_stmt
   40        | print_stmt
   41        | OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | CLOSE LEFT_PARENT aexp RIGHT_PARENT

   43 read_stmt: READ MUL COMMA exp_list
   44          | READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list

   50 write_stmt: WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list

   60 print_stmt: PRINT MUL
   61           | PRINT aexp
   62           | print_stmt COMMA aexp

   63 nonexec_stmt: fn_def
   64             | var_def

   65 var_def: type symname
   66        | type assign_stmt
   67        | var_def COMMA symname
   68        | var_def COMMA assign_stmt

   69 assign_stmt: symname EQUAL aexp

   70 fn_def: symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | SUBROUTINE symname stmts END
   77       | SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END

   79 fn_call: symname LEFT_PARENT RIGHT_PARENT
   80        | symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | CALL symname LEFT_PARENT RIGHT_PARENT
   82        | CALL symname LEFT_PARENT exp_list RIGHT_PARENT

   83 exp_list: aexp
   84         | exp_list COMMA aexp

   85 type: TYPE
   86     | TYPE MUL NUMBER

   87 aexp: fn_call
   88     | NUMBER
   89     | CHARS
   90     | symname
   91     | LEFT_PARENT aexp RIGHT_PARENT
   92     | LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | aexp POW aexp
   94     | aexp MUL aexp
   95     | aexp DIV aexp
   96     | aexp ADD aexp
   97     | aexp MINUS aexp
   98     | MINUS aexp
   99     | ADD aexp
  100     | aexp CMP aexp
  101     | aexp EQV aexp
  102     | aexp NEQV aexp
  103     | aexp OR aexp
  104     | aexp AND aexp
  105     | aexp XOR aexp
  106     | NOT aexp

  107 symname: SYMNAME


Терминальные символы с правилами, в которых они появляются

    $end (0) 0
    error (256)
    PROGRAM (258) 7
    END (259) 9 72 73 74 75 76 77 78
    EOL (260)
    END_OF_FILE (261) 1 2
    END_STMT (262)
    FUNCTION (263) 72 73 74 75
    SUBROUTINE (264) 76 77 78
    RETURN (265) 25
    CALL (266) 81 82
    GOTO (267) 23
    STOP (268) 27
    PAUSE (269) 28
    IF (270) 29 30 31 32
    THEN (271) 29 30 31 32 33 34
    ELSE (272) 30 31
    ELSEIF (273) 33 34
    ENDIF (274) 29 30 31 32
    DO (275) 35 36 37
    BREAK (276) 26
    CONTINUE (277) 24
    ENDDO (278) 35 36 37
    WHILE (279) 37
    READ (280) 43 44 45 46 47 48 49
    WRITE (281) 50 51 52 53 54 55 56 57 58 59
    PRINT (282) 60 61
    OPEN (283) 41
    CLOSE (284) 42
    FORMAT (285)
    AFILE (286) 41
    ADD (287) 96 99
    MINUS (288) 97 98
    MUL (289) 43 44 47 48 49 50 51 52 55 56 57 60 86 94
    POW (290) 93
    DIV (291) 95
    EQUAL (292) 35 36 41 69 70 71
    LEFT_PARENT (293) 29 30 31 32 33 34 41 42 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 70 71 72 73 74 75 77 78 79 80 81 82 91 92
    RIGHT_PARENT (294) 29 30 31 32 33 34 41 42 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 70 71 72 73 74 75 77 78 79 80 81 82 91 92
    COMMA (295) 35 36 41 43 46 47 48 49 50 51 52 53 55 56 57 58 62 67 68 84 92
    COLON (296)
    PARAM (297)
    CMP <_str> (298) 100
    OR <_str> (299) 103
    XOR <_str> (300) 105
    AND <_str> (301) 104
    EQV <_str> (302) 101
    NEQV <_str> (303) 102
    NOT <_str> (304) 106
    COMMENT <_str> (305) 4 6 9 10 11 12 14 15
    SYMNAME <_str> (306) 107
    CHARS <_constant> (307) 89
    NUMBER <_constant> (308) 19 86 88
    TYPE <_type> (309) 85 86


Нетерминальные символы с правилами, в которых они появляются

    $accept (55)
        on left: 0
    program (56)
        on left: 1 2
        on right: 0
    program_head <_items> (57)
        on left: 3 4 5 6
        on right: 1 5 6
    program_body <_node> (58)
        on left: 7 8
        on right: 1 2
    program_end (59)
        on left: 9 10
        on right: 1 2 10
    stmts <_items> (60)
        on left: 11 12 13
        on right: 7 8 12 13 29 30 31 32 33 34 35 36 37 72 73 74 75 76 77 78
    stmt <_items> (61)
        on left: 14 15
        on right: 13
    exec_stmt <_node> (62)
        on left: 16 17 18 19
        on right: 8 14 19
    control_stmt <_node> (63)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 17
    if_stmt <_node> (64)
        on left: 29 30 31 32
        on right: 20
    elseif_stmt <_list> (65)
        on left: 33 34
        on right: 31 32 34
    do_stmt <_node> (66)
        on left: 35 36 37
        on right: 21
    io_stmt <_node> (67)
        on left: 38 39 40 41 42
        on right: 18
    read_stmt <_node> (68)
        on left: 43 44 45 46 47 48 49
        on right: 38
    write_stmt <_node> (69)
        on left: 50 51 52 53 54 55 56 57 58 59
        on right: 39
    print_stmt <_node> (70)
        on left: 60 61 62
        on right: 40 62
    nonexec_stmt <_items> (71)
        on left: 63 64
        on right: 3 5 15
    var_def <_items> (72)
        on left: 65 66 67 68
        on right: 64 67 68
    assign_stmt <_node> (73)
        on left: 69
        on right: 16 66 68
    fn_def <_items> (74)
        on left: 70 71 72 73 74 75 76 77 78
        on right: 63
    fn_call <_node> (75)
        on left: 79 80 81 82
        on right: 22 87
    exp_list <_list> (76)
        on left: 83 84
        on right: 43 44 45 46 47 48 49 55 56 57 58 59 71 74 75 78 80 82 84
    type <_complex_type> (77)
        on left: 85 86
        on right: 65 66 72 74
    aexp <_eval_tree> (78)
        on left: 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
        on right: 23 28 29 30 31 32 33 34 35 36 37 41 42 45 46 47 48 51 52 53 54 56 57 58 59 61 62 69 70 71 83 84 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
    symname <_str> (79)
        on left: 107
        on right: 35 36 65 67 69 70 71 72 73 74 75 76 77 78 79 80 81 82 90


Состояние 0

    0 $accept: . program $end
    1 program: . program_head program_body program_end END_OF_FILE
    2        | . program_body program_end END_OF_FILE
    3 program_head: . nonexec_stmt
    4             | . COMMENT
    5             | . program_head nonexec_stmt
    6             | . program_head COMMENT
    7 program_body: . PROGRAM stmts
    8             | . exec_stmt stmts
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    PROGRAM     сдвиг, и переход в состояние 1
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 18
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    program       переход в состояние 22
    program_head  переход в состояние 23
    program_body  переход в состояние 24
    exec_stmt     переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 33
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 1

    7 program_body: PROGRAM . stmts
   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 41


Состояние 2

   73 fn_def: FUNCTION . symname LEFT_PARENT RIGHT_PARENT stmts END
   75       | FUNCTION . symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
  107 symname: . SYMNAME

    SYMNAME  сдвиг, и переход в состояние 19

    symname  переход в состояние 42


Состояние 3

   76 fn_def: SUBROUTINE . symname stmts END
   77       | SUBROUTINE . symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | SUBROUTINE . symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
  107 symname: . SYMNAME

    SYMNAME  сдвиг, и переход в состояние 19

    symname  переход в состояние 43


Состояние 4

   25 control_stmt: RETURN .

    $default  вывод с использованием правила 25 (control_stmt)


Состояние 5

   81 fn_call: CALL . symname LEFT_PARENT RIGHT_PARENT
   82        | CALL . symname LEFT_PARENT exp_list RIGHT_PARENT
  107 symname: . SYMNAME

    SYMNAME  сдвиг, и переход в состояние 19

    symname  переход в состояние 44


Состояние 6

   23 control_stmt: GOTO . aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 52
    symname  переход в состояние 53


Состояние 7

   27 control_stmt: STOP .

    $default  вывод с использованием правила 27 (control_stmt)


Состояние 8

   28 control_stmt: PAUSE . aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 54
    symname  переход в состояние 53


Состояние 9

   29 if_stmt: IF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | IF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | IF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF

    LEFT_PARENT  сдвиг, и переход в состояние 55


Состояние 10

   35 do_stmt: DO . symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | DO . symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | DO . WHILE aexp stmts ENDDO
  107 symname: . SYMNAME

    WHILE    сдвиг, и переход в состояние 56
    SYMNAME  сдвиг, и переход в состояние 19

    symname  переход в состояние 57


Состояние 11

   26 control_stmt: BREAK .

    $default  вывод с использованием правила 26 (control_stmt)


Состояние 12

   24 control_stmt: CONTINUE .

    $default  вывод с использованием правила 24 (control_stmt)


Состояние 13

   43 read_stmt: READ . MUL COMMA exp_list
   44          | READ . LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | READ . LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | READ . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | READ . LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | READ . LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | READ . LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list

    MUL          сдвиг, и переход в состояние 58
    LEFT_PARENT  сдвиг, и переход в состояние 59


Состояние 14

   50 write_stmt: WRITE . LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | WRITE . LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | WRITE . LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | WRITE . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | WRITE . LEFT_PARENT aexp RIGHT_PARENT
   55           | WRITE . LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | WRITE . LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | WRITE . LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | WRITE . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | WRITE . LEFT_PARENT aexp RIGHT_PARENT exp_list

    LEFT_PARENT  сдвиг, и переход в состояние 60


Состояние 15

   60 print_stmt: PRINT . MUL
   61           | PRINT . aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    MUL          сдвиг, и переход в состояние 61
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 62
    symname  переход в состояние 53


Состояние 16

   41 io_stmt: OPEN . LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT

    LEFT_PARENT  сдвиг, и переход в состояние 63


Состояние 17

   42 io_stmt: CLOSE . LEFT_PARENT aexp RIGHT_PARENT

    LEFT_PARENT  сдвиг, и переход в состояние 64


Состояние 18

    4 program_head: COMMENT .

    $default  вывод с использованием правила 4 (program_head)


Состояние 19

  107 symname: SYMNAME .

    $default  вывод с использованием правила 107 (symname)


Состояние 20

   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   19          | NUMBER . exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   69 assign_stmt: . symname EQUAL aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
  107 symname: . SYMNAME

    RETURN    сдвиг, и переход в состояние 4
    CALL      сдвиг, и переход в состояние 5
    GOTO      сдвиг, и переход в состояние 6
    STOP      сдвиг, и переход в состояние 7
    PAUSE     сдвиг, и переход в состояние 8
    IF        сдвиг, и переход в состояние 9
    DO        сдвиг, и переход в состояние 10
    BREAK     сдвиг, и переход в состояние 11
    CONTINUE  сдвиг, и переход в состояние 12
    READ      сдвиг, и переход в состояние 13
    WRITE     сдвиг, и переход в состояние 14
    PRINT     сдвиг, и переход в состояние 15
    OPEN      сдвиг, и переход в состояние 16
    CLOSE     сдвиг, и переход в состояние 17
    SYMNAME   сдвиг, и переход в состояние 19
    NUMBER    сдвиг, и переход в состояние 20

    exec_stmt     переход в состояние 65
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    assign_stmt   переход в состояние 35
    fn_call       переход в состояние 37
    symname       переход в состояние 66


Состояние 21

   85 type: TYPE .  [FUNCTION, SYMNAME]
   86     | TYPE . MUL NUMBER

    MUL  сдвиг, и переход в состояние 67

    $default  вывод с использованием правила 85 (type)


Состояние 22

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 68


Состояние 23

    1 program: program_head . program_body program_end END_OF_FILE
    5 program_head: program_head . nonexec_stmt
    6             | program_head . COMMENT
    7 program_body: . PROGRAM stmts
    8             | . exec_stmt stmts
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    PROGRAM     сдвиг, и переход в состояние 1
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 69
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    program_body  переход в состояние 70
    exec_stmt     переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 71
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 24

    2 program: program_body . program_end END_OF_FILE
    9 program_end: . END COMMENT
   10            | . program_end COMMENT

    END  сдвиг, и переход в состояние 72

    program_end  переход в состояние 73


Состояние 25

    8 program_body: exec_stmt . stmts
   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 74


Состояние 26

   17 exec_stmt: control_stmt .

    $default  вывод с использованием правила 17 (exec_stmt)


Состояние 27

   20 control_stmt: if_stmt .

    $default  вывод с использованием правила 20 (control_stmt)


Состояние 28

   21 control_stmt: do_stmt .

    $default  вывод с использованием правила 21 (control_stmt)


Состояние 29

   18 exec_stmt: io_stmt .

    $default  вывод с использованием правила 18 (exec_stmt)


Состояние 30

   38 io_stmt: read_stmt .

    $default  вывод с использованием правила 38 (io_stmt)


Состояние 31

   39 io_stmt: write_stmt .

    $default  вывод с использованием правила 39 (io_stmt)


Состояние 32

   40 io_stmt: print_stmt .  [COMMENT]
   62 print_stmt: print_stmt . COMMA aexp

    COMMA  сдвиг, и переход в состояние 75

    $default  вывод с использованием правила 40 (io_stmt)


Состояние 33

    3 program_head: nonexec_stmt .

    $default  вывод с использованием правила 3 (program_head)


Состояние 34

   64 nonexec_stmt: var_def .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMENT, SYMNAME, NUMBER, TYPE]
   67 var_def: var_def . COMMA symname
   68        | var_def . COMMA assign_stmt

    COMMA  сдвиг, и переход в состояние 76

    $default  вывод с использованием правила 64 (nonexec_stmt)


Состояние 35

   16 exec_stmt: assign_stmt .

    $default  вывод с использованием правила 16 (exec_stmt)


Состояние 36

   63 nonexec_stmt: fn_def .

    $default  вывод с использованием правила 63 (nonexec_stmt)


Состояние 37

   22 control_stmt: fn_call .

    $default  вывод с использованием правила 22 (control_stmt)


Состояние 38

   65 var_def: type . symname
   66        | type . assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   72 fn_def: type . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | type . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
  107 symname: . SYMNAME

    FUNCTION  сдвиг, и переход в состояние 77
    SYMNAME   сдвиг, и переход в состояние 19

    assign_stmt  переход в состояние 78
    symname      переход в состояние 79


Состояние 39

   69 assign_stmt: symname . EQUAL aexp
   70 fn_def: symname . LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | symname . LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   79 fn_call: symname . LEFT_PARENT RIGHT_PARENT
   80        | symname . LEFT_PARENT exp_list RIGHT_PARENT

    EQUAL        сдвиг, и переход в состояние 80
    LEFT_PARENT  сдвиг, и переход в состояние 81


Состояние 40

   11 stmts: COMMENT .

    $default  вывод с использованием правила 11 (stmts)


Состояние 41

    7 program_body: PROGRAM stmts .  [END]
   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    $default  вывод с использованием правила 7 (program_body)

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 42

   73 fn_def: FUNCTION symname . LEFT_PARENT RIGHT_PARENT stmts END
   75       | FUNCTION symname . LEFT_PARENT exp_list RIGHT_PARENT stmts END

    LEFT_PARENT  сдвиг, и переход в состояние 86


Состояние 43

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   76 fn_def: SUBROUTINE symname . stmts END
   77       | SUBROUTINE symname . LEFT_PARENT RIGHT_PARENT stmts END
   78       | SUBROUTINE symname . LEFT_PARENT exp_list RIGHT_PARENT stmts END

    LEFT_PARENT  сдвиг, и переход в состояние 87
    COMMENT      сдвиг, и переход в состояние 40

    stmts  переход в состояние 88


Состояние 44

   81 fn_call: CALL symname . LEFT_PARENT RIGHT_PARENT
   82        | CALL symname . LEFT_PARENT exp_list RIGHT_PARENT

    LEFT_PARENT  сдвиг, и переход в состояние 89


Состояние 45

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
   99     | ADD . aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 90
    symname  переход в состояние 53


Состояние 46

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   98     | MINUS . aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 91
    symname  переход в состояние 53


Состояние 47

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   91     | LEFT_PARENT . aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   92     | LEFT_PARENT . aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 92
    symname  переход в состояние 53


Состояние 48

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  106     | NOT . aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 93
    symname  переход в состояние 53


Состояние 49

   89 aexp: CHARS .

    $default  вывод с использованием правила 89 (aexp)


Состояние 50

   88 aexp: NUMBER .

    $default  вывод с использованием правила 88 (aexp)


Состояние 51

   87 aexp: fn_call .

    $default  вывод с использованием правила 87 (aexp)


Состояние 52

   23 control_stmt: GOTO aexp .  [COMMENT]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 23 (control_stmt)


Состояние 53

   79 fn_call: symname . LEFT_PARENT RIGHT_PARENT
   80        | symname . LEFT_PARENT exp_list RIGHT_PARENT
   90 aexp: symname .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, AND, EQV, NEQV, COMMENT, SYMNAME, NUMBER, TYPE]

    LEFT_PARENT  сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 90 (aexp)


Состояние 54

   28 control_stmt: PAUSE aexp .  [COMMENT]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 28 (control_stmt)


Состояние 55

   29 if_stmt: IF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts ENDIF
   30        | IF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 106
    symname  переход в состояние 53


Состояние 56

   37 do_stmt: DO WHILE . aexp stmts ENDDO
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 107
    symname  переход в состояние 53


Состояние 57

   35 do_stmt: DO symname . EQUAL aexp COMMA aexp stmts ENDDO
   36        | DO symname . EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO

    EQUAL  сдвиг, и переход в состояние 108


Состояние 58

   43 read_stmt: READ MUL . COMMA exp_list

    COMMA  сдвиг, и переход в состояние 109


Состояние 59

   44 read_stmt: READ LEFT_PARENT . MUL RIGHT_PARENT exp_list
   45          | READ LEFT_PARENT . aexp RIGHT_PARENT exp_list
   46          | READ LEFT_PARENT . aexp COMMA aexp RIGHT_PARENT exp_list
   47          | READ LEFT_PARENT . MUL COMMA aexp RIGHT_PARENT exp_list
   48          | READ LEFT_PARENT . aexp COMMA MUL RIGHT_PARENT exp_list
   49          | READ LEFT_PARENT . MUL COMMA MUL RIGHT_PARENT exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    MUL          сдвиг, и переход в состояние 110
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 111
    symname  переход в состояние 53


Состояние 60

   50 write_stmt: WRITE LEFT_PARENT . MUL COMMA MUL RIGHT_PARENT
   51           | WRITE LEFT_PARENT . aexp COMMA MUL RIGHT_PARENT
   52           | WRITE LEFT_PARENT . MUL COMMA aexp RIGHT_PARENT
   53           | WRITE LEFT_PARENT . aexp COMMA aexp RIGHT_PARENT
   54           | WRITE LEFT_PARENT . aexp RIGHT_PARENT
   55           | WRITE LEFT_PARENT . MUL COMMA MUL RIGHT_PARENT exp_list
   56           | WRITE LEFT_PARENT . aexp COMMA MUL RIGHT_PARENT exp_list
   57           | WRITE LEFT_PARENT . MUL COMMA aexp RIGHT_PARENT exp_list
   58           | WRITE LEFT_PARENT . aexp COMMA aexp RIGHT_PARENT exp_list
   59           | WRITE LEFT_PARENT . aexp RIGHT_PARENT exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    MUL          сдвиг, и переход в состояние 112
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 113
    symname  переход в состояние 53


Состояние 61

   60 print_stmt: PRINT MUL .

    $default  вывод с использованием правила 60 (print_stmt)


Состояние 62

   61 print_stmt: PRINT aexp .  [COMMA, COMMENT]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 61 (print_stmt)


Состояние 63

   41 io_stmt: OPEN LEFT_PARENT . aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 114
    symname  переход в состояние 53


Состояние 64

   42 io_stmt: CLOSE LEFT_PARENT . aexp RIGHT_PARENT
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 115
    symname  переход в состояние 53


Состояние 65

   19 exec_stmt: NUMBER exec_stmt .

    $default  вывод с использованием правила 19 (exec_stmt)


Состояние 66

   69 assign_stmt: symname . EQUAL aexp
   79 fn_call: symname . LEFT_PARENT RIGHT_PARENT
   80        | symname . LEFT_PARENT exp_list RIGHT_PARENT

    EQUAL        сдвиг, и переход в состояние 80
    LEFT_PARENT  сдвиг, и переход в состояние 105


Состояние 67

   86 type: TYPE MUL . NUMBER

    NUMBER  сдвиг, и переход в состояние 116


Состояние 68

    0 $accept: program $end .

    $default  принять


Состояние 69

    6 program_head: program_head COMMENT .

    $default  вывод с использованием правила 6 (program_head)


Состояние 70

    1 program: program_head program_body . program_end END_OF_FILE
    9 program_end: . END COMMENT
   10            | . program_end COMMENT

    END  сдвиг, и переход в состояние 72

    program_end  переход в состояние 117


Состояние 71

    5 program_head: program_head nonexec_stmt .

    $default  вывод с использованием правила 5 (program_head)


Состояние 72

    9 program_end: END . COMMENT

    COMMENT  сдвиг, и переход в состояние 118


Состояние 73

    2 program: program_body program_end . END_OF_FILE
   10 program_end: program_end . COMMENT

    END_OF_FILE  сдвиг, и переход в состояние 119
    COMMENT      сдвиг, и переход в состояние 120


Состояние 74

    8 program_body: exec_stmt stmts .  [END]
   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    $default  вывод с использованием правила 8 (program_body)

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 75

   62 print_stmt: print_stmt COMMA . aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 121
    symname  переход в состояние 53


Состояние 76

   67 var_def: var_def COMMA . symname
   68        | var_def COMMA . assign_stmt
   69 assign_stmt: . symname EQUAL aexp
  107 symname: . SYMNAME

    SYMNAME  сдвиг, и переход в состояние 19

    assign_stmt  переход в состояние 122
    symname      переход в состояние 123


Состояние 77

   72 fn_def: type FUNCTION . symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | type FUNCTION . symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
  107 symname: . SYMNAME

    SYMNAME  сдвиг, и переход в состояние 19

    symname  переход в состояние 124


Состояние 78

   66 var_def: type assign_stmt .

    $default  вывод с использованием правила 66 (var_def)


Состояние 79

   65 var_def: type symname .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMA, COMMENT, SYMNAME, NUMBER, TYPE]
   69 assign_stmt: symname . EQUAL aexp

    EQUAL  сдвиг, и переход в состояние 80

    $default  вывод с использованием правила 65 (var_def)


Состояние 80

   69 assign_stmt: symname EQUAL . aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 125
    symname  переход в состояние 53


Состояние 81

   70 fn_def: symname LEFT_PARENT . RIGHT_PARENT EQUAL aexp
   71       | symname LEFT_PARENT . exp_list RIGHT_PARENT EQUAL aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   79        | symname LEFT_PARENT . RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   80        | symname LEFT_PARENT . exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL          сдвиг, и переход в состояние 5
    ADD           сдвиг, и переход в состояние 45
    MINUS         сдвиг, и переход в состояние 46
    LEFT_PARENT   сдвиг, и переход в состояние 47
    RIGHT_PARENT  сдвиг, и переход в состояние 126
    NOT           сдвиг, и переход в состояние 48
    SYMNAME       сдвиг, и переход в состояние 19
    CHARS         сдвиг, и переход в состояние 49
    NUMBER        сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 127
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 82

   12 stmts: stmts COMMENT .

    $default  вывод с использованием правила 12 (stmts)


Состояние 83

   13 stmts: stmts stmt .

    $default  вывод с использованием правила 13 (stmts)


Состояние 84

   14 stmt: exec_stmt . COMMENT

    COMMENT  сдвиг, и переход в состояние 129


Состояние 85

   15 stmt: nonexec_stmt . COMMENT

    COMMENT  сдвиг, и переход в состояние 130


Состояние 86

   73 fn_def: FUNCTION symname LEFT_PARENT . RIGHT_PARENT stmts END
   75       | FUNCTION symname LEFT_PARENT . exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL          сдвиг, и переход в состояние 5
    ADD           сдвиг, и переход в состояние 45
    MINUS         сдвиг, и переход в состояние 46
    LEFT_PARENT   сдвиг, и переход в состояние 47
    RIGHT_PARENT  сдвиг, и переход в состояние 131
    NOT           сдвиг, и переход в состояние 48
    SYMNAME       сдвиг, и переход в состояние 19
    CHARS         сдвиг, и переход в состояние 49
    NUMBER        сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 132
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 87

   77 fn_def: SUBROUTINE symname LEFT_PARENT . RIGHT_PARENT stmts END
   78       | SUBROUTINE symname LEFT_PARENT . exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL          сдвиг, и переход в состояние 5
    ADD           сдвиг, и переход в состояние 45
    MINUS         сдвиг, и переход в состояние 46
    LEFT_PARENT   сдвиг, и переход в состояние 47
    RIGHT_PARENT  сдвиг, и переход в состояние 133
    NOT           сдвиг, и переход в состояние 48
    SYMNAME       сдвиг, и переход в состояние 19
    CHARS         сдвиг, и переход в состояние 49
    NUMBER        сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 134
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 88

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   76       | SUBROUTINE symname stmts . END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    END         сдвиг, и переход в состояние 135
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 89

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   81        | CALL symname LEFT_PARENT . RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   82        | CALL symname LEFT_PARENT . exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL          сдвиг, и переход в состояние 5
    ADD           сдвиг, и переход в состояние 45
    MINUS         сдвиг, и переход в состояние 46
    LEFT_PARENT   сдвиг, и переход в состояние 47
    RIGHT_PARENT  сдвиг, и переход в состояние 136
    NOT           сдвиг, и переход в состояние 48
    SYMNAME       сдвиг, и переход в состояние 19
    CHARS         сдвиг, и переход в состояние 49
    NUMBER        сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 137
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 90

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
   99     | ADD aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, NUMBER, TYPE]
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    MUL   сдвиг, и переход в состояние 96
    POW   сдвиг, и переход в состояние 97
    DIV   сдвиг, и переход в состояние 98
    OR    сдвиг, и переход в состояние 100
    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    EQV   сдвиг, и переход в состояние 103
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 99 (aexp)

    Conflict between rule 99 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 99 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 99 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 99 and token POW resolved as shift (ADD < POW).
    Conflict between rule 99 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 99 and token CMP resolved as reduce (CMP < ADD).
    Conflict between rule 99 and token OR resolved as shift (ADD < OR).
    Conflict between rule 99 and token XOR resolved as shift (ADD < XOR).
    Conflict between rule 99 and token AND resolved as shift (ADD < AND).
    Conflict between rule 99 and token EQV resolved as shift (ADD < EQV).
    Conflict between rule 99 and token NEQV resolved as shift (ADD < NEQV).


Состояние 91

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
   98     | MINUS aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, NUMBER, TYPE]
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    MUL   сдвиг, и переход в состояние 96
    POW   сдвиг, и переход в состояние 97
    DIV   сдвиг, и переход в состояние 98
    OR    сдвиг, и переход в состояние 100
    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    EQV   сдвиг, и переход в состояние 103
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 98 (aexp)

    Conflict between rule 98 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 98 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 98 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 98 and token POW resolved as shift (MINUS < POW).
    Conflict between rule 98 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 98 and token CMP resolved as reduce (CMP < MINUS).
    Conflict between rule 98 and token OR resolved as shift (MINUS < OR).
    Conflict between rule 98 and token XOR resolved as shift (MINUS < XOR).
    Conflict between rule 98 and token AND resolved as shift (MINUS < AND).
    Conflict between rule 98 and token EQV resolved as shift (MINUS < EQV).
    Conflict between rule 98 and token NEQV resolved as shift (MINUS < NEQV).


Состояние 92

   91 aexp: LEFT_PARENT aexp . RIGHT_PARENT
   92     | LEFT_PARENT aexp . COMMA aexp RIGHT_PARENT
   93     | aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 138
    COMMA         сдвиг, и переход в состояние 139
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 93

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp
  106     | NOT aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, AND, EQV, NEQV, COMMENT, SYMNAME, NUMBER, TYPE]

    $default  вывод с использованием правила 106 (aexp)

    Conflict between rule 106 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 106 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 106 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 106 and token POW resolved as reduce (POW < NOT).
    Conflict between rule 106 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 106 and token CMP resolved as reduce (CMP < NOT).
    Conflict between rule 106 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 106 and token XOR resolved as reduce (XOR < NOT).
    Conflict between rule 106 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 106 and token EQV resolved as reduce (EQV < NOT).
    Conflict between rule 106 and token NEQV resolved as reduce (NEQV < NOT).


Состояние 94

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   96     | aexp ADD . aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 140
    symname  переход в состояние 53


Состояние 95

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   97     | aexp MINUS . aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 141
    symname  переход в состояние 53


Состояние 96

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   94     | aexp MUL . aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 142
    symname  переход в состояние 53


Состояние 97

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   93     | aexp POW . aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 143
    symname  переход в состояние 53


Состояние 98

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   95     | aexp DIV . aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 144
    symname  переход в состояние 53


Состояние 99

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  100     | aexp CMP . aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 145
    symname  переход в состояние 53


Состояние 100

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  103     | aexp OR . aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 146
    symname  переход в состояние 53


Состояние 101

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  105     | aexp XOR . aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 147
    symname  переход в состояние 53


Состояние 102

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  104     | aexp AND . aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 148
    symname  переход в состояние 53


Состояние 103

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  101     | aexp EQV . aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 149
    symname  переход в состояние 53


Состояние 104

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  102     | aexp NEQV . aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 150
    symname  переход в состояние 53


Состояние 105

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   79        | symname LEFT_PARENT . RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   80        | symname LEFT_PARENT . exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL          сдвиг, и переход в состояние 5
    ADD           сдвиг, и переход в состояние 45
    MINUS         сдвиг, и переход в состояние 46
    LEFT_PARENT   сдвиг, и переход в состояние 47
    RIGHT_PARENT  сдвиг, и переход в состояние 151
    NOT           сдвиг, и переход в состояние 48
    SYMNAME       сдвиг, и переход в состояние 19
    CHARS         сдвиг, и переход в состояние 49
    NUMBER        сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 152
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 106

   29 if_stmt: IF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts ENDIF
   30        | IF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 153
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 107

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   37 do_stmt: DO WHILE aexp . stmts ENDDO
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD      сдвиг, и переход в состояние 94
    MINUS    сдвиг, и переход в состояние 95
    MUL      сдвиг, и переход в состояние 96
    POW      сдвиг, и переход в состояние 97
    DIV      сдвиг, и переход в состояние 98
    CMP      сдвиг, и переход в состояние 99
    OR       сдвиг, и переход в состояние 100
    XOR      сдвиг, и переход в состояние 101
    AND      сдвиг, и переход в состояние 102
    EQV      сдвиг, и переход в состояние 103
    NEQV     сдвиг, и переход в состояние 104
    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 154


Состояние 108

   35 do_stmt: DO symname EQUAL . aexp COMMA aexp stmts ENDDO
   36        | DO symname EQUAL . aexp COMMA aexp COMMA aexp stmts ENDDO
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 155
    symname  переход в состояние 53


Состояние 109

   43 read_stmt: READ MUL COMMA . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 156
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 110

   44 read_stmt: READ LEFT_PARENT MUL . RIGHT_PARENT exp_list
   47          | READ LEFT_PARENT MUL . COMMA aexp RIGHT_PARENT exp_list
   49          | READ LEFT_PARENT MUL . COMMA MUL RIGHT_PARENT exp_list

    RIGHT_PARENT  сдвиг, и переход в состояние 157
    COMMA         сдвиг, и переход в состояние 158


Состояние 111

   45 read_stmt: READ LEFT_PARENT aexp . RIGHT_PARENT exp_list
   46          | READ LEFT_PARENT aexp . COMMA aexp RIGHT_PARENT exp_list
   48          | READ LEFT_PARENT aexp . COMMA MUL RIGHT_PARENT exp_list
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 159
    COMMA         сдвиг, и переход в состояние 160
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 112

   50 write_stmt: WRITE LEFT_PARENT MUL . COMMA MUL RIGHT_PARENT
   52           | WRITE LEFT_PARENT MUL . COMMA aexp RIGHT_PARENT
   55           | WRITE LEFT_PARENT MUL . COMMA MUL RIGHT_PARENT exp_list
   57           | WRITE LEFT_PARENT MUL . COMMA aexp RIGHT_PARENT exp_list

    COMMA  сдвиг, и переход в состояние 161


Состояние 113

   51 write_stmt: WRITE LEFT_PARENT aexp . COMMA MUL RIGHT_PARENT
   53           | WRITE LEFT_PARENT aexp . COMMA aexp RIGHT_PARENT
   54           | WRITE LEFT_PARENT aexp . RIGHT_PARENT
   56           | WRITE LEFT_PARENT aexp . COMMA MUL RIGHT_PARENT exp_list
   58           | WRITE LEFT_PARENT aexp . COMMA aexp RIGHT_PARENT exp_list
   59           | WRITE LEFT_PARENT aexp . RIGHT_PARENT exp_list
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 162
    COMMA         сдвиг, и переход в состояние 163
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 114

   41 io_stmt: OPEN LEFT_PARENT aexp . COMMA AFILE EQUAL aexp RIGHT_PARENT
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    COMMA  сдвиг, и переход в состояние 164
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104


Состояние 115

   42 io_stmt: CLOSE LEFT_PARENT aexp . RIGHT_PARENT
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 165
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 116

   86 type: TYPE MUL NUMBER .

    $default  вывод с использованием правила 86 (type)


Состояние 117

    1 program: program_head program_body program_end . END_OF_FILE
   10 program_end: program_end . COMMENT

    END_OF_FILE  сдвиг, и переход в состояние 166
    COMMENT      сдвиг, и переход в состояние 120


Состояние 118

    9 program_end: END COMMENT .

    $default  вывод с использованием правила 9 (program_end)


Состояние 119

    2 program: program_body program_end END_OF_FILE .

    $default  вывод с использованием правила 2 (program)


Состояние 120

   10 program_end: program_end COMMENT .

    $default  вывод с использованием правила 10 (program_end)


Состояние 121

   62 print_stmt: print_stmt COMMA aexp .  [COMMA, COMMENT]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 62 (print_stmt)


Состояние 122

   68 var_def: var_def COMMA assign_stmt .

    $default  вывод с использованием правила 68 (var_def)


Состояние 123

   67 var_def: var_def COMMA symname .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMA, COMMENT, SYMNAME, NUMBER, TYPE]
   69 assign_stmt: symname . EQUAL aexp

    EQUAL  сдвиг, и переход в состояние 80

    $default  вывод с использованием правила 67 (var_def)


Состояние 124

   72 fn_def: type FUNCTION symname . LEFT_PARENT RIGHT_PARENT stmts END
   74       | type FUNCTION symname . LEFT_PARENT exp_list RIGHT_PARENT stmts END

    LEFT_PARENT  сдвиг, и переход в состояние 167


Состояние 125

   69 assign_stmt: symname EQUAL aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMA, COMMENT, SYMNAME, NUMBER, TYPE]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 69 (assign_stmt)


Состояние 126

   70 fn_def: symname LEFT_PARENT RIGHT_PARENT . EQUAL aexp
   79 fn_call: symname LEFT_PARENT RIGHT_PARENT .  [COMMENT]

    EQUAL  сдвиг, и переход в состояние 168

    $default  вывод с использованием правила 79 (fn_call)


Состояние 127

   71 fn_def: symname LEFT_PARENT exp_list . RIGHT_PARENT EQUAL aexp
   80 fn_call: symname LEFT_PARENT exp_list . RIGHT_PARENT
   84 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 169
    COMMA         сдвиг, и переход в состояние 170


Состояние 128

   83 exp_list: aexp .  [RIGHT_PARENT, COMMA, COMMENT]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 83 (exp_list)


Состояние 129

   14 stmt: exec_stmt COMMENT .

    $default  вывод с использованием правила 14 (stmt)


Состояние 130

   15 stmt: nonexec_stmt COMMENT .

    $default  вывод с использованием правила 15 (stmt)


Состояние 131

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   73 fn_def: FUNCTION symname LEFT_PARENT RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 171


Состояние 132

   75 fn_def: FUNCTION symname LEFT_PARENT exp_list . RIGHT_PARENT stmts END
   84 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 172
    COMMA         сдвиг, и переход в состояние 170


Состояние 133

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   77 fn_def: SUBROUTINE symname LEFT_PARENT RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 173


Состояние 134

   78 fn_def: SUBROUTINE symname LEFT_PARENT exp_list . RIGHT_PARENT stmts END
   84 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 174
    COMMA         сдвиг, и переход в состояние 170


Состояние 135

   76 fn_def: SUBROUTINE symname stmts END .

    $default  вывод с использованием правила 76 (fn_def)


Состояние 136

   81 fn_call: CALL symname LEFT_PARENT RIGHT_PARENT .

    $default  вывод с использованием правила 81 (fn_call)


Состояние 137

   82 fn_call: CALL symname LEFT_PARENT exp_list . RIGHT_PARENT
   84 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 175
    COMMA         сдвиг, и переход в состояние 170


Состояние 138

   91 aexp: LEFT_PARENT aexp RIGHT_PARENT .

    $default  вывод с использованием правила 91 (aexp)


Состояние 139

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   92     | LEFT_PARENT aexp COMMA . aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 176
    symname  переход в состояние 53


Состояние 140

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   96     | aexp ADD aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, NUMBER, TYPE]
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    MUL   сдвиг, и переход в состояние 96
    POW   сдвиг, и переход в состояние 97
    DIV   сдвиг, и переход в состояние 98
    OR    сдвиг, и переход в состояние 100
    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    EQV   сдвиг, и переход в состояние 103
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 96 (aexp)

    Conflict between rule 96 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 96 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 96 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 96 and token POW resolved as shift (ADD < POW).
    Conflict between rule 96 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 96 and token CMP resolved as reduce (CMP < ADD).
    Conflict between rule 96 and token OR resolved as shift (ADD < OR).
    Conflict between rule 96 and token XOR resolved as shift (ADD < XOR).
    Conflict between rule 96 and token AND resolved as shift (ADD < AND).
    Conflict between rule 96 and token EQV resolved as shift (ADD < EQV).
    Conflict between rule 96 and token NEQV resolved as shift (ADD < NEQV).


Состояние 141

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
   97     | aexp MINUS aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, NUMBER, TYPE]
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    MUL   сдвиг, и переход в состояние 96
    POW   сдвиг, и переход в состояние 97
    DIV   сдвиг, и переход в состояние 98
    OR    сдвиг, и переход в состояние 100
    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    EQV   сдвиг, и переход в состояние 103
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 97 (aexp)

    Conflict between rule 97 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 97 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 97 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 97 and token POW resolved as shift (MINUS < POW).
    Conflict between rule 97 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 97 and token CMP resolved as reduce (CMP < MINUS).
    Conflict between rule 97 and token OR resolved as shift (MINUS < OR).
    Conflict between rule 97 and token XOR resolved as shift (MINUS < XOR).
    Conflict between rule 97 and token AND resolved as shift (MINUS < AND).
    Conflict between rule 97 and token EQV resolved as shift (MINUS < EQV).
    Conflict between rule 97 and token NEQV resolved as shift (MINUS < NEQV).


Состояние 142

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   94     | aexp MUL aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, DIV, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, NUMBER, TYPE]
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    POW   сдвиг, и переход в состояние 97
    OR    сдвиг, и переход в состояние 100
    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    EQV   сдвиг, и переход в состояние 103
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 94 (aexp)

    Conflict between rule 94 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 94 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 94 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 94 and token POW resolved as shift (MUL < POW).
    Conflict between rule 94 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 94 and token CMP resolved as reduce (CMP < MUL).
    Conflict between rule 94 and token OR resolved as shift (MUL < OR).
    Conflict between rule 94 and token XOR resolved as shift (MUL < XOR).
    Conflict between rule 94 and token AND resolved as shift (MUL < AND).
    Conflict between rule 94 and token EQV resolved as shift (MUL < EQV).
    Conflict between rule 94 and token NEQV resolved as shift (MUL < NEQV).


Состояние 143

   93 aexp: aexp . POW aexp
   93     | aexp POW aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, DIV, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, NUMBER, TYPE]
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    POW   сдвиг, и переход в состояние 97
    OR    сдвиг, и переход в состояние 100
    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    EQV   сдвиг, и переход в состояние 103
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 93 (aexp)

    Conflict between rule 93 and token ADD resolved as reduce (ADD < POW).
    Conflict between rule 93 and token MINUS resolved as reduce (MINUS < POW).
    Conflict between rule 93 and token MUL resolved as reduce (MUL < POW).
    Conflict between rule 93 and token POW resolved as shift (%right POW).
    Conflict between rule 93 and token DIV resolved as reduce (DIV < POW).
    Conflict between rule 93 and token CMP resolved as reduce (CMP < POW).
    Conflict between rule 93 and token OR resolved as shift (POW < OR).
    Conflict between rule 93 and token XOR resolved as shift (POW < XOR).
    Conflict between rule 93 and token AND resolved as shift (POW < AND).
    Conflict between rule 93 and token EQV resolved as shift (POW < EQV).
    Conflict between rule 93 and token NEQV resolved as shift (POW < NEQV).


Состояние 144

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   95     | aexp DIV aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, DIV, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, NUMBER, TYPE]
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    POW   сдвиг, и переход в состояние 97
    OR    сдвиг, и переход в состояние 100
    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    EQV   сдвиг, и переход в состояние 103
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 95 (aexp)

    Conflict between rule 95 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 95 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 95 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 95 and token POW resolved as shift (DIV < POW).
    Conflict between rule 95 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 95 and token CMP resolved as reduce (CMP < DIV).
    Conflict between rule 95 and token OR resolved as shift (DIV < OR).
    Conflict between rule 95 and token XOR resolved as shift (DIV < XOR).
    Conflict between rule 95 and token AND resolved as shift (DIV < AND).
    Conflict between rule 95 and token EQV resolved as shift (DIV < EQV).
    Conflict between rule 95 and token NEQV resolved as shift (DIV < NEQV).


Состояние 145

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  100     | aexp CMP aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, RIGHT_PARENT, COMMA, COMMENT, SYMNAME, NUMBER, TYPE]
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    CMP  ошибка (неассоциативная)

    $default  вывод с использованием правила 100 (aexp)

    Conflict between rule 100 and token ADD resolved as shift (CMP < ADD).
    Conflict between rule 100 and token MINUS resolved as shift (CMP < MINUS).
    Conflict between rule 100 and token MUL resolved as shift (CMP < MUL).
    Conflict between rule 100 and token POW resolved as shift (CMP < POW).
    Conflict between rule 100 and token DIV resolved as shift (CMP < DIV).
    Conflict between rule 100 and token CMP resolved as an error (%nonassoc CMP).
    Conflict between rule 100 and token OR resolved as shift (CMP < OR).
    Conflict between rule 100 and token XOR resolved as shift (CMP < XOR).
    Conflict between rule 100 and token AND resolved as shift (CMP < AND).
    Conflict between rule 100 and token EQV resolved as shift (CMP < EQV).
    Conflict between rule 100 and token NEQV resolved as shift (CMP < NEQV).


Состояние 146

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  103     | aexp OR aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, EQV, COMMENT, SYMNAME, NUMBER, TYPE]
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 103 (aexp)

    Conflict between rule 103 and token ADD resolved as reduce (ADD < OR).
    Conflict between rule 103 and token MINUS resolved as reduce (MINUS < OR).
    Conflict between rule 103 and token MUL resolved as reduce (MUL < OR).
    Conflict between rule 103 and token POW resolved as reduce (POW < OR).
    Conflict between rule 103 and token DIV resolved as reduce (DIV < OR).
    Conflict between rule 103 and token CMP resolved as reduce (CMP < OR).
    Conflict between rule 103 and token OR resolved as reduce (%left OR).
    Conflict between rule 103 and token XOR resolved as shift (OR < XOR).
    Conflict between rule 103 and token AND resolved as shift (OR < AND).
    Conflict between rule 103 and token EQV resolved as reduce (EQV < OR).
    Conflict between rule 103 and token NEQV resolved as shift (OR < NEQV).


Состояние 147

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp
  105     | aexp XOR aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, EQV, COMMENT, SYMNAME, NUMBER, TYPE]

    AND   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 105 (aexp)

    Conflict between rule 105 and token ADD resolved as reduce (ADD < XOR).
    Conflict between rule 105 and token MINUS resolved as reduce (MINUS < XOR).
    Conflict between rule 105 and token MUL resolved as reduce (MUL < XOR).
    Conflict between rule 105 and token POW resolved as reduce (POW < XOR).
    Conflict between rule 105 and token DIV resolved as reduce (DIV < XOR).
    Conflict between rule 105 and token CMP resolved as reduce (CMP < XOR).
    Conflict between rule 105 and token OR resolved as reduce (OR < XOR).
    Conflict between rule 105 and token XOR resolved as reduce (%left XOR).
    Conflict between rule 105 and token AND resolved as shift (XOR < AND).
    Conflict between rule 105 and token EQV resolved as reduce (EQV < XOR).
    Conflict between rule 105 and token NEQV resolved as shift (XOR < NEQV).


Состояние 148

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  104     | aexp AND aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, AND, EQV, COMMENT, SYMNAME, NUMBER, TYPE]
  105     | aexp . XOR aexp

    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 104 (aexp)

    Conflict between rule 104 and token ADD resolved as reduce (ADD < AND).
    Conflict between rule 104 and token MINUS resolved as reduce (MINUS < AND).
    Conflict between rule 104 and token MUL resolved as reduce (MUL < AND).
    Conflict between rule 104 and token POW resolved as reduce (POW < AND).
    Conflict between rule 104 and token DIV resolved as reduce (DIV < AND).
    Conflict between rule 104 and token CMP resolved as reduce (CMP < AND).
    Conflict between rule 104 and token OR resolved as reduce (OR < AND).
    Conflict between rule 104 and token XOR resolved as reduce (XOR < AND).
    Conflict between rule 104 and token AND resolved as reduce (%left AND).
    Conflict between rule 104 and token EQV resolved as reduce (EQV < AND).
    Conflict between rule 104 and token NEQV resolved as shift (AND < NEQV).


Состояние 149

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  101     | aexp EQV aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, EQV, COMMENT, SYMNAME, NUMBER, TYPE]
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    OR    сдвиг, и переход в состояние 100
    XOR   сдвиг, и переход в состояние 101
    AND   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 101 (aexp)

    Conflict between rule 101 and token ADD resolved as reduce (ADD < EQV).
    Conflict between rule 101 and token MINUS resolved as reduce (MINUS < EQV).
    Conflict between rule 101 and token MUL resolved as reduce (MUL < EQV).
    Conflict between rule 101 and token POW resolved as reduce (POW < EQV).
    Conflict between rule 101 and token DIV resolved as reduce (DIV < EQV).
    Conflict between rule 101 and token CMP resolved as reduce (CMP < EQV).
    Conflict between rule 101 and token OR resolved as shift (EQV < OR).
    Conflict between rule 101 and token XOR resolved as shift (EQV < XOR).
    Conflict between rule 101 and token AND resolved as shift (EQV < AND).
    Conflict between rule 101 and token EQV resolved as reduce (%left EQV).
    Conflict between rule 101 and token NEQV resolved as shift (EQV < NEQV).


Состояние 150

   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  102     | aexp NEQV aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, AND, EQV, NEQV, COMMENT, SYMNAME, NUMBER, TYPE]
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    $default  вывод с использованием правила 102 (aexp)

    Conflict between rule 102 and token ADD resolved as reduce (ADD < NEQV).
    Conflict between rule 102 and token MINUS resolved as reduce (MINUS < NEQV).
    Conflict between rule 102 and token MUL resolved as reduce (MUL < NEQV).
    Conflict between rule 102 and token POW resolved as reduce (POW < NEQV).
    Conflict between rule 102 and token DIV resolved as reduce (DIV < NEQV).
    Conflict between rule 102 and token CMP resolved as reduce (CMP < NEQV).
    Conflict between rule 102 and token OR resolved as reduce (OR < NEQV).
    Conflict between rule 102 and token XOR resolved as reduce (XOR < NEQV).
    Conflict between rule 102 and token AND resolved as reduce (AND < NEQV).
    Conflict between rule 102 and token EQV resolved as reduce (EQV < NEQV).
    Conflict between rule 102 and token NEQV resolved as reduce (%left NEQV).


Состояние 151

   79 fn_call: symname LEFT_PARENT RIGHT_PARENT .

    $default  вывод с использованием правила 79 (fn_call)


Состояние 152

   80 fn_call: symname LEFT_PARENT exp_list . RIGHT_PARENT
   84 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 177
    COMMA         сдвиг, и переход в состояние 170


Состояние 153

   29 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts elseif_stmt ENDIF

    THEN  сдвиг, и переход в состояние 178


Состояние 154

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   37        | DO WHILE aexp stmts . ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    ENDDO       сдвиг, и переход в состояние 179
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 155

   35 do_stmt: DO symname EQUAL aexp . COMMA aexp stmts ENDDO
   36        | DO symname EQUAL aexp . COMMA aexp COMMA aexp stmts ENDDO
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    COMMA  сдвиг, и переход в состояние 180
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104


Состояние 156

   43 read_stmt: READ MUL COMMA exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 43 (read_stmt)


Состояние 157

   44 read_stmt: READ LEFT_PARENT MUL RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 181
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 158

   47 read_stmt: READ LEFT_PARENT MUL COMMA . aexp RIGHT_PARENT exp_list
   49          | READ LEFT_PARENT MUL COMMA . MUL RIGHT_PARENT exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    MUL          сдвиг, и переход в состояние 182
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 183
    symname  переход в состояние 53


Состояние 159

   45 read_stmt: READ LEFT_PARENT aexp RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 184
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 160

   46 read_stmt: READ LEFT_PARENT aexp COMMA . aexp RIGHT_PARENT exp_list
   48          | READ LEFT_PARENT aexp COMMA . MUL RIGHT_PARENT exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    MUL          сдвиг, и переход в состояние 185
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 186
    symname  переход в состояние 53


Состояние 161

   50 write_stmt: WRITE LEFT_PARENT MUL COMMA . MUL RIGHT_PARENT
   52           | WRITE LEFT_PARENT MUL COMMA . aexp RIGHT_PARENT
   55           | WRITE LEFT_PARENT MUL COMMA . MUL RIGHT_PARENT exp_list
   57           | WRITE LEFT_PARENT MUL COMMA . aexp RIGHT_PARENT exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    MUL          сдвиг, и переход в состояние 187
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 188
    symname  переход в состояние 53


Состояние 162

   54 write_stmt: WRITE LEFT_PARENT aexp RIGHT_PARENT .  [COMMENT]
   59           | WRITE LEFT_PARENT aexp RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    $default  вывод с использованием правила 54 (write_stmt)

    fn_call   переход в состояние 51
    exp_list  переход в состояние 189
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 163

   51 write_stmt: WRITE LEFT_PARENT aexp COMMA . MUL RIGHT_PARENT
   53           | WRITE LEFT_PARENT aexp COMMA . aexp RIGHT_PARENT
   56           | WRITE LEFT_PARENT aexp COMMA . MUL RIGHT_PARENT exp_list
   58           | WRITE LEFT_PARENT aexp COMMA . aexp RIGHT_PARENT exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    MUL          сдвиг, и переход в состояние 190
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 191
    symname  переход в состояние 53


Состояние 164

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA . AFILE EQUAL aexp RIGHT_PARENT

    AFILE  сдвиг, и переход в состояние 192


Состояние 165

   42 io_stmt: CLOSE LEFT_PARENT aexp RIGHT_PARENT .

    $default  вывод с использованием правила 42 (io_stmt)


Состояние 166

    1 program: program_head program_body program_end END_OF_FILE .

    $default  вывод с использованием правила 1 (program)


Состояние 167

   72 fn_def: type FUNCTION symname LEFT_PARENT . RIGHT_PARENT stmts END
   74       | type FUNCTION symname LEFT_PARENT . exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL          сдвиг, и переход в состояние 5
    ADD           сдвиг, и переход в состояние 45
    MINUS         сдвиг, и переход в состояние 46
    LEFT_PARENT   сдвиг, и переход в состояние 47
    RIGHT_PARENT  сдвиг, и переход в состояние 193
    NOT           сдвиг, и переход в состояние 48
    SYMNAME       сдвиг, и переход в состояние 19
    CHARS         сдвиг, и переход в состояние 49
    NUMBER        сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 194
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 168

   70 fn_def: symname LEFT_PARENT RIGHT_PARENT EQUAL . aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 195
    symname  переход в состояние 53


Состояние 169

   71 fn_def: symname LEFT_PARENT exp_list RIGHT_PARENT . EQUAL aexp
   80 fn_call: symname LEFT_PARENT exp_list RIGHT_PARENT .  [COMMENT]

    EQUAL  сдвиг, и переход в состояние 196

    $default  вывод с использованием правила 80 (fn_call)


Состояние 170

   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   84 exp_list: exp_list COMMA . aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 197
    symname  переход в состояние 53


Состояние 171

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts . END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    END         сдвиг, и переход в состояние 198
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 172

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   75 fn_def: FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 199


Состояние 173

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   77       | SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts . END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    END         сдвиг, и переход в состояние 200
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 174

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   78 fn_def: SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 201


Состояние 175

   82 fn_call: CALL symname LEFT_PARENT exp_list RIGHT_PARENT .

    $default  вывод с использованием правила 82 (fn_call)


Состояние 176

   92 aexp: LEFT_PARENT aexp COMMA aexp . RIGHT_PARENT
   93     | aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 202
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 177

   80 fn_call: symname LEFT_PARENT exp_list RIGHT_PARENT .

    $default  вывод с использованием правила 80 (fn_call)


Состояние 178

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   29 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts elseif_stmt ENDIF

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 203


Состояние 179

   37 do_stmt: DO WHILE aexp stmts ENDDO .

    $default  вывод с использованием правила 37 (do_stmt)


Состояние 180

   35 do_stmt: DO symname EQUAL aexp COMMA . aexp stmts ENDDO
   36        | DO symname EQUAL aexp COMMA . aexp COMMA aexp stmts ENDDO
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 204
    symname  переход в состояние 53


Состояние 181

   44 read_stmt: READ LEFT_PARENT MUL RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 44 (read_stmt)


Состояние 182

   49 read_stmt: READ LEFT_PARENT MUL COMMA MUL . RIGHT_PARENT exp_list

    RIGHT_PARENT  сдвиг, и переход в состояние 205


Состояние 183

   47 read_stmt: READ LEFT_PARENT MUL COMMA aexp . RIGHT_PARENT exp_list
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 206
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 184

   45 read_stmt: READ LEFT_PARENT aexp RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 45 (read_stmt)


Состояние 185

   48 read_stmt: READ LEFT_PARENT aexp COMMA MUL . RIGHT_PARENT exp_list

    RIGHT_PARENT  сдвиг, и переход в состояние 207


Состояние 186

   46 read_stmt: READ LEFT_PARENT aexp COMMA aexp . RIGHT_PARENT exp_list
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 208
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 187

   50 write_stmt: WRITE LEFT_PARENT MUL COMMA MUL . RIGHT_PARENT
   55           | WRITE LEFT_PARENT MUL COMMA MUL . RIGHT_PARENT exp_list

    RIGHT_PARENT  сдвиг, и переход в состояние 209


Состояние 188

   52 write_stmt: WRITE LEFT_PARENT MUL COMMA aexp . RIGHT_PARENT
   57           | WRITE LEFT_PARENT MUL COMMA aexp . RIGHT_PARENT exp_list
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 210
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 189

   59 write_stmt: WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 59 (write_stmt)


Состояние 190

   51 write_stmt: WRITE LEFT_PARENT aexp COMMA MUL . RIGHT_PARENT
   56           | WRITE LEFT_PARENT aexp COMMA MUL . RIGHT_PARENT exp_list

    RIGHT_PARENT  сдвиг, и переход в состояние 211


Состояние 191

   53 write_stmt: WRITE LEFT_PARENT aexp COMMA aexp . RIGHT_PARENT
   58           | WRITE LEFT_PARENT aexp COMMA aexp . RIGHT_PARENT exp_list
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 212
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 192

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA AFILE . EQUAL aexp RIGHT_PARENT

    EQUAL  сдвиг, и переход в состояние 213


Состояние 193

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   72 fn_def: type FUNCTION symname LEFT_PARENT RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 214


Состояние 194

   74 fn_def: type FUNCTION symname LEFT_PARENT exp_list . RIGHT_PARENT stmts END
   84 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 215
    COMMA         сдвиг, и переход в состояние 170


Состояние 195

   70 fn_def: symname LEFT_PARENT RIGHT_PARENT EQUAL aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMENT, SYMNAME, NUMBER, TYPE]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 70 (fn_def)


Состояние 196

   71 fn_def: symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL . aexp
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 216
    symname  переход в состояние 53


Состояние 197

   84 exp_list: exp_list COMMA aexp .  [RIGHT_PARENT, COMMA, COMMENT]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 84 (exp_list)


Состояние 198

   73 fn_def: FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 73 (fn_def)


Состояние 199

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts . END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    END         сдвиг, и переход в состояние 217
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 200

   77 fn_def: SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 77 (fn_def)


Состояние 201

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   78       | SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts . END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    END         сдвиг, и переход в состояние 218
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 202

   92 aexp: LEFT_PARENT aexp COMMA aexp RIGHT_PARENT .

    $default  вывод с использованием правила 92 (aexp)


Состояние 203

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   29        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts . ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts . ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts . elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts . elseif_stmt ENDIF
   33 elseif_stmt: . ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts
   34            | . elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    ELSE        сдвиг, и переход в состояние 219
    ELSEIF      сдвиг, и переход в состояние 220
    ENDIF       сдвиг, и переход в состояние 221
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    elseif_stmt   переход в состояние 222
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 204

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   35 do_stmt: DO symname EQUAL aexp COMMA aexp . stmts ENDDO
   36        | DO symname EQUAL aexp COMMA aexp . COMMA aexp stmts ENDDO
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD      сдвиг, и переход в состояние 94
    MINUS    сдвиг, и переход в состояние 95
    MUL      сдвиг, и переход в состояние 96
    POW      сдвиг, и переход в состояние 97
    DIV      сдвиг, и переход в состояние 98
    COMMA    сдвиг, и переход в состояние 223
    CMP      сдвиг, и переход в состояние 99
    OR       сдвиг, и переход в состояние 100
    XOR      сдвиг, и переход в состояние 101
    AND      сдвиг, и переход в состояние 102
    EQV      сдвиг, и переход в состояние 103
    NEQV     сдвиг, и переход в состояние 104
    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 224


Состояние 205

   49 read_stmt: READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 225
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 206

   47 read_stmt: READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 226
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 207

   48 read_stmt: READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 227
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 208

   46 read_stmt: READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call   переход в состояние 51
    exp_list  переход в состояние 228
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 209

   50 write_stmt: WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT .  [COMMENT]
   55           | WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    $default  вывод с использованием правила 50 (write_stmt)

    fn_call   переход в состояние 51
    exp_list  переход в состояние 229
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 210

   52 write_stmt: WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT .  [COMMENT]
   57           | WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    $default  вывод с использованием правила 52 (write_stmt)

    fn_call   переход в состояние 51
    exp_list  переход в состояние 230
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 211

   51 write_stmt: WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT .  [COMMENT]
   56           | WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    $default  вывод с использованием правила 51 (write_stmt)

    fn_call   переход в состояние 51
    exp_list  переход в состояние 231
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 212

   53 write_stmt: WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT .  [COMMENT]
   58           | WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT . exp_list
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   83 exp_list: . aexp
   84         | . exp_list COMMA aexp
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    $default  вывод с использованием правила 53 (write_stmt)

    fn_call   переход в состояние 51
    exp_list  переход в состояние 232
    aexp      переход в состояние 128
    symname   переход в состояние 53


Состояние 213

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA AFILE EQUAL . aexp RIGHT_PARENT
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 233
    symname  переход в состояние 53


Состояние 214

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   72       | type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts . END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    END         сдвиг, и переход в состояние 234
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 215

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   74 fn_def: type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 235


Состояние 216

   71 fn_def: symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMENT, SYMNAME, NUMBER, TYPE]
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 94
    MINUS  сдвиг, и переход в состояние 95
    MUL    сдвиг, и переход в состояние 96
    POW    сдвиг, и переход в состояние 97
    DIV    сдвиг, и переход в состояние 98
    CMP    сдвиг, и переход в состояние 99
    OR     сдвиг, и переход в состояние 100
    XOR    сдвиг, и переход в состояние 101
    AND    сдвиг, и переход в состояние 102
    EQV    сдвиг, и переход в состояние 103
    NEQV   сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 71 (fn_def)


Состояние 217

   75 fn_def: FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 75 (fn_def)


Состояние 218

   78 fn_def: SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 78 (fn_def)


Состояние 219

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   30 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE . stmts ENDIF

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 236


Состояние 220

   33 elseif_stmt: ELSEIF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts

    LEFT_PARENT  сдвиг, и переход в состояние 237


Состояние 221

   29 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF .

    $default  вывод с использованием правила 29 (if_stmt)


Состояние 222

   31 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt . ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt . ENDIF
   34 elseif_stmt: elseif_stmt . ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts

    ELSE    сдвиг, и переход в состояние 238
    ELSEIF  сдвиг, и переход в состояние 239
    ENDIF   сдвиг, и переход в состояние 240


Состояние 223

   36 do_stmt: DO symname EQUAL aexp COMMA aexp COMMA . aexp stmts ENDDO
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 241
    symname  переход в состояние 53


Состояние 224

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   35        | DO symname EQUAL aexp COMMA aexp stmts . ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    ENDDO       сдвиг, и переход в состояние 242
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 225

   49 read_stmt: READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 49 (read_stmt)


Состояние 226

   47 read_stmt: READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 47 (read_stmt)


Состояние 227

   48 read_stmt: READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 48 (read_stmt)


Состояние 228

   46 read_stmt: READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 46 (read_stmt)


Состояние 229

   55 write_stmt: WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 55 (write_stmt)


Состояние 230

   57 write_stmt: WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 57 (write_stmt)


Состояние 231

   56 write_stmt: WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 56 (write_stmt)


Состояние 232

   58 write_stmt: WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list .  [COMMENT]
   84 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 58 (write_stmt)


Состояние 233

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp . RIGHT_PARENT
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 243
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 234

   72 fn_def: type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 72 (fn_def)


Состояние 235

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   74       | type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts . END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    END         сдвиг, и переход в состояние 244
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 236

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts . ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    ENDIF       сдвиг, и переход в состояние 245
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 237

   33 elseif_stmt: ELSEIF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 246
    symname  переход в состояние 53


Состояние 238

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   31 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE . stmts ENDIF

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 247


Состояние 239

   34 elseif_stmt: elseif_stmt ELSEIF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts

    LEFT_PARENT  сдвиг, и переход в состояние 248


Состояние 240

   32 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF .

    $default  вывод с использованием правила 32 (if_stmt)


Состояние 241

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   36 do_stmt: DO symname EQUAL aexp COMMA aexp COMMA aexp . stmts ENDDO
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD      сдвиг, и переход в состояние 94
    MINUS    сдвиг, и переход в состояние 95
    MUL      сдвиг, и переход в состояние 96
    POW      сдвиг, и переход в состояние 97
    DIV      сдвиг, и переход в состояние 98
    CMP      сдвиг, и переход в состояние 99
    OR       сдвиг, и переход в состояние 100
    XOR      сдвиг, и переход в состояние 101
    AND      сдвиг, и переход в состояние 102
    EQV      сдвиг, и переход в состояние 103
    NEQV     сдвиг, и переход в состояние 104
    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 249


Состояние 242

   35 do_stmt: DO symname EQUAL aexp COMMA aexp stmts ENDDO .

    $default  вывод с использованием правила 35 (do_stmt)


Состояние 243

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT .

    $default  вывод с использованием правила 41 (io_stmt)


Состояние 244

   74 fn_def: type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 74 (fn_def)


Состояние 245

   30 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF .

    $default  вывод с использованием правила 30 (if_stmt)


Состояние 246

   33 elseif_stmt: ELSEIF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 250
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 247

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts . ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    ENDIF       сдвиг, и переход в состояние 251
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 248

   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   87 aexp: . fn_call
   88     | . NUMBER
   89     | . CHARS
   90     | . symname
   91     | . LEFT_PARENT aexp RIGHT_PARENT
   92     | . LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   93     | . aexp POW aexp
   94     | . aexp MUL aexp
   95     | . aexp DIV aexp
   96     | . aexp ADD aexp
   97     | . aexp MINUS aexp
   98     | . MINUS aexp
   99     | . ADD aexp
  100     | . aexp CMP aexp
  101     | . aexp EQV aexp
  102     | . aexp NEQV aexp
  103     | . aexp OR aexp
  104     | . aexp AND aexp
  105     | . aexp XOR aexp
  106     | . NOT aexp
  107 symname: . SYMNAME

    CALL         сдвиг, и переход в состояние 5
    ADD          сдвиг, и переход в состояние 45
    MINUS        сдвиг, и переход в состояние 46
    LEFT_PARENT  сдвиг, и переход в состояние 47
    NOT          сдвиг, и переход в состояние 48
    SYMNAME      сдвиг, и переход в состояние 19
    CHARS        сдвиг, и переход в состояние 49
    NUMBER       сдвиг, и переход в состояние 50

    fn_call  переход в состояние 51
    aexp     переход в состояние 252
    symname  переход в состояние 53


Состояние 249

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   36        | DO symname EQUAL aexp COMMA aexp COMMA aexp stmts . ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    ENDDO       сдвиг, и переход в состояние 253
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 250

   33 elseif_stmt: ELSEIF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts

    THEN  сдвиг, и переход в состояние 254


Состояние 251

   31 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF .

    $default  вывод с использованием правила 31 (if_stmt)


Состояние 252

   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts
   93 aexp: aexp . POW aexp
   94     | aexp . MUL aexp
   95     | aexp . DIV aexp
   96     | aexp . ADD aexp
   97     | aexp . MINUS aexp
  100     | aexp . CMP aexp
  101     | aexp . EQV aexp
  102     | aexp . NEQV aexp
  103     | aexp . OR aexp
  104     | aexp . AND aexp
  105     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 94
    MINUS         сдвиг, и переход в состояние 95
    MUL           сдвиг, и переход в состояние 96
    POW           сдвиг, и переход в состояние 97
    DIV           сдвиг, и переход в состояние 98
    RIGHT_PARENT  сдвиг, и переход в состояние 255
    CMP           сдвиг, и переход в состояние 99
    OR            сдвиг, и переход в состояние 100
    XOR           сдвиг, и переход в состояние 101
    AND           сдвиг, и переход в состояние 102
    EQV           сдвиг, и переход в состояние 103
    NEQV          сдвиг, и переход в состояние 104


Состояние 253

   36 do_stmt: DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO .

    $default  вывод с использованием правила 36 (do_stmt)


Состояние 254

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   33 elseif_stmt: ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 256


Состояние 255

   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts

    THEN  сдвиг, и переход в состояние 257


Состояние 256

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   33 elseif_stmt: ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts .  [ELSE, ELSEIF, ENDIF]
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    $default  вывод с использованием правила 33 (elseif_stmt)

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39


Состояние 257

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts

    COMMENT  сдвиг, и переход в состояние 40

    stmts  переход в состояние 258


Состояние 258

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19          | . NUMBER exec_stmt
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO aexp
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE aexp
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts .  [ELSE, ELSEIF, ENDIF]
   35 do_stmt: . DO symname EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO symname EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ MUL COMMA exp_list
   44          | . READ LEFT_PARENT MUL RIGHT_PARENT exp_list
   45          | . READ LEFT_PARENT aexp RIGHT_PARENT exp_list
   46          | . READ LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   47          | . READ LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   48          | . READ LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   49          | . READ LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   50 write_stmt: . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT
   51           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT
   52           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT
   53           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT
   54           | . WRITE LEFT_PARENT aexp RIGHT_PARENT
   55           | . WRITE LEFT_PARENT MUL COMMA MUL RIGHT_PARENT exp_list
   56           | . WRITE LEFT_PARENT aexp COMMA MUL RIGHT_PARENT exp_list
   57           | . WRITE LEFT_PARENT MUL COMMA aexp RIGHT_PARENT exp_list
   58           | . WRITE LEFT_PARENT aexp COMMA aexp RIGHT_PARENT exp_list
   59           | . WRITE LEFT_PARENT aexp RIGHT_PARENT exp_list
   60 print_stmt: . PRINT MUL
   61           | . PRINT aexp
   62           | . print_stmt COMMA aexp
   63 nonexec_stmt: . fn_def
   64             | . var_def
   65 var_def: . type symname
   66        | . type assign_stmt
   67        | . var_def COMMA symname
   68        | . var_def COMMA assign_stmt
   69 assign_stmt: . symname EQUAL aexp
   70 fn_def: . symname LEFT_PARENT RIGHT_PARENT EQUAL aexp
   71       | . symname LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   72       | . type FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   73       | . FUNCTION symname LEFT_PARENT RIGHT_PARENT stmts END
   74       | . type FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   75       | . FUNCTION symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   76       | . SUBROUTINE symname stmts END
   77       | . SUBROUTINE symname LEFT_PARENT RIGHT_PARENT stmts END
   78       | . SUBROUTINE symname LEFT_PARENT exp_list RIGHT_PARENT stmts END
   79 fn_call: . symname LEFT_PARENT RIGHT_PARENT
   80        | . symname LEFT_PARENT exp_list RIGHT_PARENT
   81        | . CALL symname LEFT_PARENT RIGHT_PARENT
   82        | . CALL symname LEFT_PARENT exp_list RIGHT_PARENT
   85 type: . TYPE
   86     | . TYPE MUL NUMBER
  107 symname: . SYMNAME

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 82
    SYMNAME     сдвиг, и переход в состояние 19
    NUMBER      сдвиг, и переход в состояние 20
    TYPE        сдвиг, и переход в состояние 21

    $default  вывод с использованием правила 34 (elseif_stmt)

    stmt          переход в состояние 83
    exec_stmt     переход в состояние 84
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 85
    var_def       переход в состояние 34
    assign_stmt   переход в состояние 35
    fn_def        переход в состояние 36
    fn_call       переход в состояние 37
    type          переход в состояние 38
    symname       переход в состояние 39
