Терминалы не используются в грамматике

    EOL
    FORMAT
    COLON
    PARAM


Грамматика

    0 $accept: program $end

    1 program: program_head program_body program_end END_OF_FILE
    2        | program_body program_end END_OF_FILE

    3 program_head: nonexec_stmt
    4             | COMMENT
    5             | program_head nonexec_stmt
    6             | program_head COMMENT

    7 program_body: PROGRAM stmts
    8             | exec_stmt stmts

    9 program_end: END COMMENT
   10            | program_end COMMENT

   11 stmts: COMMENT
   12      | stmts COMMENT
   13      | stmts stmt

   14 stmt: exec_stmt COMMENT
   15     | nonexec_stmt COMMENT

   16 exec_stmt: assign_stmt
   17          | control_stmt
   18          | io_stmt

   19 assign_stmt: SYMNAME EQUAL aexp

   20 control_stmt: if_stmt
   21             | do_stmt
   22             | fn_call
   23             | GOTO
   24             | CONTINUE
   25             | RETURN
   26             | BREAK
   27             | STOP
   28             | PAUSE NUMBER

   29 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF

   33 elseif_stmt: ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts
   34            | elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts

   35 do_stmt: DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | DO WHILE aexp stmts ENDDO

   38 io_stmt: read_stmt
   39        | write_stmt
   40        | print_stmt
   41        | OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | CLOSE LEFT_PARENT aexp RIGHT_PARENT

   43 read_stmt: READ format
   44          | READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | read_stmt COMMA aexp

   46 write_stmt: WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list

   47 print_stmt: PRINT format
   48           | print_stmt COMMA aexp

   49 format: MUL
   50       | aexp

   51 nonexec_stmt: fn_def
   52             | var_def

   53 var_def: type SYMNAME
   54        | var_def COMMA SYMNAME

   55 fn_def: SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | SUBROUTINE SYMNAME stmts END
   62       | SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END

   64 fn_call: SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT

   68 exp_list: aexp
   69         | exp_list COMMA aexp

   70 type: TYPE
   71     | TYPE MUL NUMBER

   72 aexp: fn_call
   73     | NUMBER
   74     | CHARS
   75     | SYMNAME
   76     | LEFT_PARENT aexp RIGHT_PARENT
   77     | aexp POW aexp
   78     | aexp MUL aexp
   79     | aexp DIV aexp
   80     | aexp ADD aexp
   81     | aexp MINUS aexp
   82     | MINUS aexp
   83     | aexp CMP aexp
   84     | aexp EQV aexp
   85     | aexp NEQV aexp
   86     | aexp OR aexp
   87     | aexp AND aexp
   88     | aexp XOR aexp
   89     | NOT aexp


Терминальные символы с правилами, в которых они появляются

    $end (0) 0
    error (256)
    PROGRAM (258) 7
    END (259) 9 57 58 59 60 61 62 63
    EOL (260)
    END_OF_FILE (261) 1 2
    FUNCTION (262) 57 58 59 60
    SUBROUTINE (263) 61 62 63
    RETURN (264) 25
    CALL (265) 66 67
    GOTO (266) 23
    STOP (267) 27
    PAUSE (268) 28
    IF (269) 29 30 31 32
    THEN (270) 29 30 31 32 33 34
    ELSE (271) 30 31
    ELSEIF (272) 33 34
    ENDIF (273) 29 30 31 32
    DO (274) 35 36 37
    BREAK (275) 26
    CONTINUE (276) 24
    ENDDO (277) 35 36 37
    WHILE (278) 37
    READ (279) 43 44
    WRITE (280) 46
    PRINT (281) 47
    OPEN (282) 41
    CLOSE (283) 42
    FORMAT (284)
    AFILE (285) 41
    ADD (286) 80
    MINUS (287) 81 82
    MUL (288) 49 71 78
    POW (289) 77
    DIV (290) 79
    EQUAL (291) 19 35 36 41 55 56
    LEFT_PARENT (292) 29 30 31 32 33 34 41 42 44 46 55 56 57 58 59 60 62 63 64 65 66 67 76
    RIGHT_PARENT (293) 29 30 31 32 33 34 41 42 44 46 55 56 57 58 59 60 62 63 64 65 66 67 76
    COMMA (294) 35 36 41 44 45 46 48 54 69
    COLON (295)
    PARAM (296)
    CMP <_str> (297) 83
    OR <_str> (298) 86
    XOR <_str> (299) 88
    AND <_str> (300) 87
    EQV <_str> (301) 84
    NEQV <_str> (302) 85
    NOT <_str> (303) 89
    COMMENT <_str> (304) 4 6 9 10 11 12 14 15
    SYMNAME <_str> (305) 19 35 36 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 75
    CHARS <_constant> (306) 74
    NUMBER <_constant> (307) 28 71 73
    TYPE <_type> (308) 70 71


Нетерминальные символы с правилами, в которых они появляются

    $accept (54)
        on left: 0
    program (55)
        on left: 1 2
        on right: 0
    program_head <_items> (56)
        on left: 3 4 5 6
        on right: 1 5 6
    program_body <_node> (57)
        on left: 7 8
        on right: 1 2
    program_end (58)
        on left: 9 10
        on right: 1 2 10
    stmts <_items> (59)
        on left: 11 12 13
        on right: 7 8 12 13 29 30 31 32 33 34 35 36 37 57 58 59 60 61 62 63
    stmt <_items> (60)
        on left: 14 15
        on right: 13
    exec_stmt <_node> (61)
        on left: 16 17 18
        on right: 8 14
    assign_stmt <_node> (62)
        on left: 19
        on right: 16
    control_stmt <_node> (63)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 17
    if_stmt <_node> (64)
        on left: 29 30 31 32
        on right: 20
    elseif_stmt <_list> (65)
        on left: 33 34
        on right: 31 32 34
    do_stmt <_node> (66)
        on left: 35 36 37
        on right: 21
    io_stmt <_node> (67)
        on left: 38 39 40 41 42
        on right: 18
    read_stmt <_node> (68)
        on left: 43 44 45
        on right: 38 45
    write_stmt <_node> (69)
        on left: 46
        on right: 39
    print_stmt <_node> (70)
        on left: 47 48
        on right: 40 48
    format <_eval_tree> (71)
        on left: 49 50
        on right: 43 44 46 47
    nonexec_stmt <_items> (72)
        on left: 51 52
        on right: 3 5 15
    var_def <_items> (73)
        on left: 53 54
        on right: 52 54
    fn_def <_items> (74)
        on left: 55 56 57 58 59 60 61 62 63
        on right: 51
    fn_call <_node> (75)
        on left: 64 65 66 67
        on right: 22 72
    exp_list <_list> (76)
        on left: 68 69
        on right: 46 56 59 60 63 65 67 69
    type <_complex_type> (77)
        on left: 70 71
        on right: 53 57 59
    aexp <_eval_tree> (78)
        on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
        on right: 19 29 30 31 32 33 34 35 36 37 41 42 44 45 48 50 55 56 68 69 76 77 78 79 80 81 82 83 84 85 86 87 88 89


Состояние 0

    0 $accept: . program $end
    1 program: . program_head program_body program_end END_OF_FILE
    2        | . program_body program_end END_OF_FILE
    3 program_head: . nonexec_stmt
    4             | . COMMENT
    5             | . program_head nonexec_stmt
    6             | . program_head COMMENT
    7 program_body: . PROGRAM stmts
    8             | . exec_stmt stmts
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    PROGRAM     сдвиг, и переход в состояние 1
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 18
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    program       переход в состояние 21
    program_head  переход в состояние 22
    program_body  переход в состояние 23
    exec_stmt     переход в состояние 24
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 33
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 1

    7 program_body: PROGRAM . stmts
   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 39


Состояние 2

   58 fn_def: FUNCTION . SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   60       | FUNCTION . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END

    SYMNAME  сдвиг, и переход в состояние 40


Состояние 3

   61 fn_def: SUBROUTINE . SYMNAME stmts END
   62       | SUBROUTINE . SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | SUBROUTINE . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END

    SYMNAME  сдвиг, и переход в состояние 41


Состояние 4

   25 control_stmt: RETURN .

    $default  вывод с использованием правила 25 (control_stmt)


Состояние 5

   66 fn_call: CALL . SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | CALL . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT

    SYMNAME  сдвиг, и переход в состояние 42


Состояние 6

   23 control_stmt: GOTO .

    $default  вывод с использованием правила 23 (control_stmt)


Состояние 7

   27 control_stmt: STOP .

    $default  вывод с использованием правила 27 (control_stmt)


Состояние 8

   28 control_stmt: PAUSE . NUMBER

    NUMBER  сдвиг, и переход в состояние 43


Состояние 9

   29 if_stmt: IF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | IF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | IF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF

    LEFT_PARENT  сдвиг, и переход в состояние 44


Состояние 10

   35 do_stmt: DO . SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | DO . SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | DO . WHILE aexp stmts ENDDO

    WHILE    сдвиг, и переход в состояние 45
    SYMNAME  сдвиг, и переход в состояние 46


Состояние 11

   26 control_stmt: BREAK .

    $default  вывод с использованием правила 26 (control_stmt)


Состояние 12

   24 control_stmt: CONTINUE .

    $default  вывод с использованием правила 24 (control_stmt)


Состояние 13

   43 read_stmt: READ . format
   44          | READ . LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   49 format: . MUL
   50       | . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    MUL          сдвиг, и переход в состояние 48
    LEFT_PARENT  сдвиг, и переход в состояние 49
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    format   переход в состояние 54
    fn_call  переход в состояние 55
    aexp     переход в состояние 56


Состояние 14

   46 write_stmt: WRITE . LEFT_PARENT format COMMA format RIGHT_PARENT exp_list

    LEFT_PARENT  сдвиг, и переход в состояние 57


Состояние 15

   47 print_stmt: PRINT . format
   49 format: . MUL
   50       | . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    MUL          сдвиг, и переход в состояние 48
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    format   переход в состояние 59
    fn_call  переход в состояние 55
    aexp     переход в состояние 56


Состояние 16

   41 io_stmt: OPEN . LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT

    LEFT_PARENT  сдвиг, и переход в состояние 60


Состояние 17

   42 io_stmt: CLOSE . LEFT_PARENT aexp RIGHT_PARENT

    LEFT_PARENT  сдвиг, и переход в состояние 61


Состояние 18

    4 program_head: COMMENT .

    $default  вывод с использованием правила 4 (program_head)


Состояние 19

   19 assign_stmt: SYMNAME . EQUAL aexp
   55 fn_def: SYMNAME . LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | SYMNAME . LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   64 fn_call: SYMNAME . LEFT_PARENT RIGHT_PARENT
   65        | SYMNAME . LEFT_PARENT exp_list RIGHT_PARENT

    EQUAL        сдвиг, и переход в состояние 62
    LEFT_PARENT  сдвиг, и переход в состояние 63


Состояние 20

   70 type: TYPE .  [FUNCTION, SYMNAME]
   71     | TYPE . MUL NUMBER

    MUL  сдвиг, и переход в состояние 64

    $default  вывод с использованием правила 70 (type)


Состояние 21

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 65


Состояние 22

    1 program: program_head . program_body program_end END_OF_FILE
    5 program_head: program_head . nonexec_stmt
    6             | program_head . COMMENT
    7 program_body: . PROGRAM stmts
    8             | . exec_stmt stmts
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    PROGRAM     сдвиг, и переход в состояние 1
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 66
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    program_body  переход в состояние 67
    exec_stmt     переход в состояние 24
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 68
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 23

    2 program: program_body . program_end END_OF_FILE
    9 program_end: . END COMMENT
   10            | . program_end COMMENT

    END  сдвиг, и переход в состояние 69

    program_end  переход в состояние 70


Состояние 24

    8 program_body: exec_stmt . stmts
   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 71


Состояние 25

   16 exec_stmt: assign_stmt .

    $default  вывод с использованием правила 16 (exec_stmt)


Состояние 26

   17 exec_stmt: control_stmt .

    $default  вывод с использованием правила 17 (exec_stmt)


Состояние 27

   20 control_stmt: if_stmt .

    $default  вывод с использованием правила 20 (control_stmt)


Состояние 28

   21 control_stmt: do_stmt .

    $default  вывод с использованием правила 21 (control_stmt)


Состояние 29

   18 exec_stmt: io_stmt .

    $default  вывод с использованием правила 18 (exec_stmt)


Состояние 30

   38 io_stmt: read_stmt .  [COMMENT]
   45 read_stmt: read_stmt . COMMA aexp

    COMMA  сдвиг, и переход в состояние 72

    $default  вывод с использованием правила 38 (io_stmt)


Состояние 31

   39 io_stmt: write_stmt .

    $default  вывод с использованием правила 39 (io_stmt)


Состояние 32

   40 io_stmt: print_stmt .  [COMMENT]
   48 print_stmt: print_stmt . COMMA aexp

    COMMA  сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 40 (io_stmt)


Состояние 33

    3 program_head: nonexec_stmt .

    $default  вывод с использованием правила 3 (program_head)


Состояние 34

   52 nonexec_stmt: var_def .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMENT, SYMNAME, TYPE]
   54 var_def: var_def . COMMA SYMNAME

    COMMA  сдвиг, и переход в состояние 74

    $default  вывод с использованием правила 52 (nonexec_stmt)


Состояние 35

   51 nonexec_stmt: fn_def .

    $default  вывод с использованием правила 51 (nonexec_stmt)


Состояние 36

   22 control_stmt: fn_call .

    $default  вывод с использованием правила 22 (control_stmt)


Состояние 37

   53 var_def: type . SYMNAME
   57 fn_def: type . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | type . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END

    FUNCTION  сдвиг, и переход в состояние 75
    SYMNAME   сдвиг, и переход в состояние 76


Состояние 38

   11 stmts: COMMENT .

    $default  вывод с использованием правила 11 (stmts)


Состояние 39

    7 program_body: PROGRAM stmts .  [END]
   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    $default  вывод с использованием правила 7 (program_body)

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 40

   58 fn_def: FUNCTION SYMNAME . LEFT_PARENT RIGHT_PARENT stmts END
   60       | FUNCTION SYMNAME . LEFT_PARENT exp_list RIGHT_PARENT stmts END

    LEFT_PARENT  сдвиг, и переход в состояние 81


Состояние 41

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   61 fn_def: SUBROUTINE SYMNAME . stmts END
   62       | SUBROUTINE SYMNAME . LEFT_PARENT RIGHT_PARENT stmts END
   63       | SUBROUTINE SYMNAME . LEFT_PARENT exp_list RIGHT_PARENT stmts END

    LEFT_PARENT  сдвиг, и переход в состояние 82
    COMMENT      сдвиг, и переход в состояние 38

    stmts  переход в состояние 83


Состояние 42

   66 fn_call: CALL SYMNAME . LEFT_PARENT RIGHT_PARENT
   67        | CALL SYMNAME . LEFT_PARENT exp_list RIGHT_PARENT

    LEFT_PARENT  сдвиг, и переход в состояние 84


Состояние 43

   28 control_stmt: PAUSE NUMBER .

    $default  вывод с использованием правила 28 (control_stmt)


Состояние 44

   29 if_stmt: IF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts ENDIF
   30        | IF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 85


Состояние 45

   37 do_stmt: DO WHILE . aexp stmts ENDDO
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 86


Состояние 46

   35 do_stmt: DO SYMNAME . EQUAL aexp COMMA aexp stmts ENDDO
   36        | DO SYMNAME . EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO

    EQUAL  сдвиг, и переход в состояние 87


Состояние 47

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   82     | MINUS . aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 88


Состояние 48

   49 format: MUL .

    $default  вывод с использованием правила 49 (format)


Состояние 49

   44 read_stmt: READ LEFT_PARENT . format COMMA format RIGHT_PARENT aexp
   49 format: . MUL
   50       | . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   76     | LEFT_PARENT . aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    MUL          сдвиг, и переход в состояние 48
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    format   переход в состояние 89
    fn_call  переход в состояние 55
    aexp     переход в состояние 90


Состояние 50

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp
   89     | NOT . aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 91


Состояние 51

   64 fn_call: SYMNAME . LEFT_PARENT RIGHT_PARENT
   65        | SYMNAME . LEFT_PARENT exp_list RIGHT_PARENT
   75 aexp: SYMNAME .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, AND, EQV, NEQV, COMMENT, SYMNAME, TYPE]

    LEFT_PARENT  сдвиг, и переход в состояние 92

    $default  вывод с использованием правила 75 (aexp)


Состояние 52

   74 aexp: CHARS .

    $default  вывод с использованием правила 74 (aexp)


Состояние 53

   73 aexp: NUMBER .

    $default  вывод с использованием правила 73 (aexp)


Состояние 54

   43 read_stmt: READ format .

    $default  вывод с использованием правила 43 (read_stmt)


Состояние 55

   72 aexp: fn_call .

    $default  вывод с использованием правила 72 (aexp)


Состояние 56

   50 format: aexp .  [RIGHT_PARENT, COMMA, COMMENT]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 50 (format)


Состояние 57

   46 write_stmt: WRITE LEFT_PARENT . format COMMA format RIGHT_PARENT exp_list
   49 format: . MUL
   50       | . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    MUL          сдвиг, и переход в состояние 48
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    format   переход в состояние 104
    fn_call  переход в состояние 55
    aexp     переход в состояние 56


Состояние 58

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   76     | LEFT_PARENT . aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 105


Состояние 59

   47 print_stmt: PRINT format .

    $default  вывод с использованием правила 47 (print_stmt)


Состояние 60

   41 io_stmt: OPEN LEFT_PARENT . aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 106


Состояние 61

   42 io_stmt: CLOSE LEFT_PARENT . aexp RIGHT_PARENT
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 107


Состояние 62

   19 assign_stmt: SYMNAME EQUAL . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 108


Состояние 63

   55 fn_def: SYMNAME LEFT_PARENT . RIGHT_PARENT EQUAL aexp
   56       | SYMNAME LEFT_PARENT . exp_list RIGHT_PARENT EQUAL aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   64        | SYMNAME LEFT_PARENT . RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   65        | SYMNAME LEFT_PARENT . exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   68 exp_list: . aexp
   69         | . exp_list COMMA aexp
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL          сдвиг, и переход в состояние 5
    MINUS         сдвиг, и переход в состояние 47
    LEFT_PARENT   сдвиг, и переход в состояние 58
    RIGHT_PARENT  сдвиг, и переход в состояние 109
    NOT           сдвиг, и переход в состояние 50
    SYMNAME       сдвиг, и переход в состояние 51
    CHARS         сдвиг, и переход в состояние 52
    NUMBER        сдвиг, и переход в состояние 53

    fn_call   переход в состояние 55
    exp_list  переход в состояние 110
    aexp      переход в состояние 111


Состояние 64

   71 type: TYPE MUL . NUMBER

    NUMBER  сдвиг, и переход в состояние 112


Состояние 65

    0 $accept: program $end .

    $default  принять


Состояние 66

    6 program_head: program_head COMMENT .

    $default  вывод с использованием правила 6 (program_head)


Состояние 67

    1 program: program_head program_body . program_end END_OF_FILE
    9 program_end: . END COMMENT
   10            | . program_end COMMENT

    END  сдвиг, и переход в состояние 69

    program_end  переход в состояние 113


Состояние 68

    5 program_head: program_head nonexec_stmt .

    $default  вывод с использованием правила 5 (program_head)


Состояние 69

    9 program_end: END . COMMENT

    COMMENT  сдвиг, и переход в состояние 114


Состояние 70

    2 program: program_body program_end . END_OF_FILE
   10 program_end: program_end . COMMENT

    END_OF_FILE  сдвиг, и переход в состояние 115
    COMMENT      сдвиг, и переход в состояние 116


Состояние 71

    8 program_body: exec_stmt stmts .  [END]
   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    $default  вывод с использованием правила 8 (program_body)

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 72

   45 read_stmt: read_stmt COMMA . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 117


Состояние 73

   48 print_stmt: print_stmt COMMA . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 118


Состояние 74

   54 var_def: var_def COMMA . SYMNAME

    SYMNAME  сдвиг, и переход в состояние 119


Состояние 75

   57 fn_def: type FUNCTION . SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | type FUNCTION . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END

    SYMNAME  сдвиг, и переход в состояние 120


Состояние 76

   53 var_def: type SYMNAME .

    $default  вывод с использованием правила 53 (var_def)


Состояние 77

   12 stmts: stmts COMMENT .

    $default  вывод с использованием правила 12 (stmts)


Состояние 78

   13 stmts: stmts stmt .

    $default  вывод с использованием правила 13 (stmts)


Состояние 79

   14 stmt: exec_stmt . COMMENT

    COMMENT  сдвиг, и переход в состояние 121


Состояние 80

   15 stmt: nonexec_stmt . COMMENT

    COMMENT  сдвиг, и переход в состояние 122


Состояние 81

   58 fn_def: FUNCTION SYMNAME LEFT_PARENT . RIGHT_PARENT stmts END
   60       | FUNCTION SYMNAME LEFT_PARENT . exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   68 exp_list: . aexp
   69         | . exp_list COMMA aexp
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL          сдвиг, и переход в состояние 5
    MINUS         сдвиг, и переход в состояние 47
    LEFT_PARENT   сдвиг, и переход в состояние 58
    RIGHT_PARENT  сдвиг, и переход в состояние 123
    NOT           сдвиг, и переход в состояние 50
    SYMNAME       сдвиг, и переход в состояние 51
    CHARS         сдвиг, и переход в состояние 52
    NUMBER        сдвиг, и переход в состояние 53

    fn_call   переход в состояние 55
    exp_list  переход в состояние 124
    aexp      переход в состояние 111


Состояние 82

   62 fn_def: SUBROUTINE SYMNAME LEFT_PARENT . RIGHT_PARENT stmts END
   63       | SUBROUTINE SYMNAME LEFT_PARENT . exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   68 exp_list: . aexp
   69         | . exp_list COMMA aexp
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL          сдвиг, и переход в состояние 5
    MINUS         сдвиг, и переход в состояние 47
    LEFT_PARENT   сдвиг, и переход в состояние 58
    RIGHT_PARENT  сдвиг, и переход в состояние 125
    NOT           сдвиг, и переход в состояние 50
    SYMNAME       сдвиг, и переход в состояние 51
    CHARS         сдвиг, и переход в состояние 52
    NUMBER        сдвиг, и переход в состояние 53

    fn_call   переход в состояние 55
    exp_list  переход в состояние 126
    aexp      переход в состояние 111


Состояние 83

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   61       | SUBROUTINE SYMNAME stmts . END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    END         сдвиг, и переход в состояние 127
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 84

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   66        | CALL SYMNAME LEFT_PARENT . RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   67        | CALL SYMNAME LEFT_PARENT . exp_list RIGHT_PARENT
   68 exp_list: . aexp
   69         | . exp_list COMMA aexp
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL          сдвиг, и переход в состояние 5
    MINUS         сдвиг, и переход в состояние 47
    LEFT_PARENT   сдвиг, и переход в состояние 58
    RIGHT_PARENT  сдвиг, и переход в состояние 128
    NOT           сдвиг, и переход в состояние 50
    SYMNAME       сдвиг, и переход в состояние 51
    CHARS         сдвиг, и переход в состояние 52
    NUMBER        сдвиг, и переход в состояние 53

    fn_call   переход в состояние 55
    exp_list  переход в состояние 129
    aexp      переход в состояние 111


Состояние 85

   29 if_stmt: IF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts ENDIF
   30        | IF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 93
    MINUS         сдвиг, и переход в состояние 94
    MUL           сдвиг, и переход в состояние 95
    POW           сдвиг, и переход в состояние 96
    DIV           сдвиг, и переход в состояние 97
    RIGHT_PARENT  сдвиг, и переход в состояние 130
    CMP           сдвиг, и переход в состояние 98
    OR            сдвиг, и переход в состояние 99
    XOR           сдвиг, и переход в состояние 100
    AND           сдвиг, и переход в состояние 101
    EQV           сдвиг, и переход в состояние 102
    NEQV          сдвиг, и переход в состояние 103


Состояние 86

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   37 do_stmt: DO WHILE aexp . stmts ENDDO
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD      сдвиг, и переход в состояние 93
    MINUS    сдвиг, и переход в состояние 94
    MUL      сдвиг, и переход в состояние 95
    POW      сдвиг, и переход в состояние 96
    DIV      сдвиг, и переход в состояние 97
    CMP      сдвиг, и переход в состояние 98
    OR       сдвиг, и переход в состояние 99
    XOR      сдвиг, и переход в состояние 100
    AND      сдвиг, и переход в состояние 101
    EQV      сдвиг, и переход в состояние 102
    NEQV     сдвиг, и переход в состояние 103
    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 131


Состояние 87

   35 do_stmt: DO SYMNAME EQUAL . aexp COMMA aexp stmts ENDDO
   36        | DO SYMNAME EQUAL . aexp COMMA aexp COMMA aexp stmts ENDDO
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 132


Состояние 88

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   82     | MINUS aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, TYPE]
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    MUL   сдвиг, и переход в состояние 95
    POW   сдвиг, и переход в состояние 96
    DIV   сдвиг, и переход в состояние 97
    OR    сдвиг, и переход в состояние 99
    XOR   сдвиг, и переход в состояние 100
    AND   сдвиг, и переход в состояние 101
    EQV   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 82 (aexp)

    Conflict between rule 82 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 82 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 82 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 82 and token POW resolved as shift (MINUS < POW).
    Conflict between rule 82 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 82 and token CMP resolved as reduce (CMP < MINUS).
    Conflict between rule 82 and token OR resolved as shift (MINUS < OR).
    Conflict between rule 82 and token XOR resolved as shift (MINUS < XOR).
    Conflict between rule 82 and token AND resolved as shift (MINUS < AND).
    Conflict between rule 82 and token EQV resolved as shift (MINUS < EQV).
    Conflict between rule 82 and token NEQV resolved as shift (MINUS < NEQV).


Состояние 89

   44 read_stmt: READ LEFT_PARENT format . COMMA format RIGHT_PARENT aexp

    COMMA  сдвиг, и переход в состояние 133


Состояние 90

   50 format: aexp .  [COMMA]
   76 aexp: LEFT_PARENT aexp . RIGHT_PARENT
   77     | aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 93
    MINUS         сдвиг, и переход в состояние 94
    MUL           сдвиг, и переход в состояние 95
    POW           сдвиг, и переход в состояние 96
    DIV           сдвиг, и переход в состояние 97
    RIGHT_PARENT  сдвиг, и переход в состояние 134
    CMP           сдвиг, и переход в состояние 98
    OR            сдвиг, и переход в состояние 99
    XOR           сдвиг, и переход в состояние 100
    AND           сдвиг, и переход в состояние 101
    EQV           сдвиг, и переход в состояние 102
    NEQV          сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 50 (format)


Состояние 91

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp
   89     | NOT aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, AND, EQV, NEQV, COMMENT, SYMNAME, TYPE]

    $default  вывод с использованием правила 89 (aexp)

    Conflict between rule 89 and token ADD resolved as reduce (ADD < NOT).
    Conflict between rule 89 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 89 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 89 and token POW resolved as reduce (POW < NOT).
    Conflict between rule 89 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 89 and token CMP resolved as reduce (CMP < NOT).
    Conflict between rule 89 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 89 and token XOR resolved as reduce (XOR < NOT).
    Conflict between rule 89 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 89 and token EQV resolved as reduce (EQV < NOT).
    Conflict between rule 89 and token NEQV resolved as reduce (NEQV < NOT).


Состояние 92

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   64        | SYMNAME LEFT_PARENT . RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   65        | SYMNAME LEFT_PARENT . exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   68 exp_list: . aexp
   69         | . exp_list COMMA aexp
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL          сдвиг, и переход в состояние 5
    MINUS         сдвиг, и переход в состояние 47
    LEFT_PARENT   сдвиг, и переход в состояние 58
    RIGHT_PARENT  сдвиг, и переход в состояние 135
    NOT           сдвиг, и переход в состояние 50
    SYMNAME       сдвиг, и переход в состояние 51
    CHARS         сдвиг, и переход в состояние 52
    NUMBER        сдвиг, и переход в состояние 53

    fn_call   переход в состояние 55
    exp_list  переход в состояние 136
    aexp      переход в состояние 111


Состояние 93

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   80     | aexp ADD . aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 137


Состояние 94

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   81     | aexp MINUS . aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 138


Состояние 95

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   78     | aexp MUL . aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 139


Состояние 96

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   77     | aexp POW . aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 140


Состояние 97

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   79     | aexp DIV . aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 141


Состояние 98

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   83     | aexp CMP . aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 142


Состояние 99

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   86     | aexp OR . aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 143


Состояние 100

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   88     | aexp XOR . aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 144


Состояние 101

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   87     | aexp AND . aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 145


Состояние 102

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   84     | aexp EQV . aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 146


Состояние 103

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   85     | aexp NEQV . aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 147


Состояние 104

   46 write_stmt: WRITE LEFT_PARENT format . COMMA format RIGHT_PARENT exp_list

    COMMA  сдвиг, и переход в состояние 148


Состояние 105

   76 aexp: LEFT_PARENT aexp . RIGHT_PARENT
   77     | aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 93
    MINUS         сдвиг, и переход в состояние 94
    MUL           сдвиг, и переход в состояние 95
    POW           сдвиг, и переход в состояние 96
    DIV           сдвиг, и переход в состояние 97
    RIGHT_PARENT  сдвиг, и переход в состояние 134
    CMP           сдвиг, и переход в состояние 98
    OR            сдвиг, и переход в состояние 99
    XOR           сдвиг, и переход в состояние 100
    AND           сдвиг, и переход в состояние 101
    EQV           сдвиг, и переход в состояние 102
    NEQV          сдвиг, и переход в состояние 103


Состояние 106

   41 io_stmt: OPEN LEFT_PARENT aexp . COMMA AFILE EQUAL aexp RIGHT_PARENT
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    COMMA  сдвиг, и переход в состояние 149
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103


Состояние 107

   42 io_stmt: CLOSE LEFT_PARENT aexp . RIGHT_PARENT
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 93
    MINUS         сдвиг, и переход в состояние 94
    MUL           сдвиг, и переход в состояние 95
    POW           сдвиг, и переход в состояние 96
    DIV           сдвиг, и переход в состояние 97
    RIGHT_PARENT  сдвиг, и переход в состояние 150
    CMP           сдвиг, и переход в состояние 98
    OR            сдвиг, и переход в состояние 99
    XOR           сдвиг, и переход в состояние 100
    AND           сдвиг, и переход в состояние 101
    EQV           сдвиг, и переход в состояние 102
    NEQV          сдвиг, и переход в состояние 103


Состояние 108

   19 assign_stmt: SYMNAME EQUAL aexp .  [COMMENT]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 19 (assign_stmt)


Состояние 109

   55 fn_def: SYMNAME LEFT_PARENT RIGHT_PARENT . EQUAL aexp
   64 fn_call: SYMNAME LEFT_PARENT RIGHT_PARENT .  [COMMENT]

    EQUAL  сдвиг, и переход в состояние 151

    $default  вывод с использованием правила 64 (fn_call)


Состояние 110

   56 fn_def: SYMNAME LEFT_PARENT exp_list . RIGHT_PARENT EQUAL aexp
   65 fn_call: SYMNAME LEFT_PARENT exp_list . RIGHT_PARENT
   69 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 152
    COMMA         сдвиг, и переход в состояние 153


Состояние 111

   68 exp_list: aexp .  [RIGHT_PARENT, COMMA, COMMENT]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 68 (exp_list)


Состояние 112

   71 type: TYPE MUL NUMBER .

    $default  вывод с использованием правила 71 (type)


Состояние 113

    1 program: program_head program_body program_end . END_OF_FILE
   10 program_end: program_end . COMMENT

    END_OF_FILE  сдвиг, и переход в состояние 154
    COMMENT      сдвиг, и переход в состояние 116


Состояние 114

    9 program_end: END COMMENT .

    $default  вывод с использованием правила 9 (program_end)


Состояние 115

    2 program: program_body program_end END_OF_FILE .

    $default  вывод с использованием правила 2 (program)


Состояние 116

   10 program_end: program_end COMMENT .

    $default  вывод с использованием правила 10 (program_end)


Состояние 117

   45 read_stmt: read_stmt COMMA aexp .  [COMMA, COMMENT]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 45 (read_stmt)


Состояние 118

   48 print_stmt: print_stmt COMMA aexp .  [COMMA, COMMENT]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 48 (print_stmt)


Состояние 119

   54 var_def: var_def COMMA SYMNAME .

    $default  вывод с использованием правила 54 (var_def)


Состояние 120

   57 fn_def: type FUNCTION SYMNAME . LEFT_PARENT RIGHT_PARENT stmts END
   59       | type FUNCTION SYMNAME . LEFT_PARENT exp_list RIGHT_PARENT stmts END

    LEFT_PARENT  сдвиг, и переход в состояние 155


Состояние 121

   14 stmt: exec_stmt COMMENT .

    $default  вывод с использованием правила 14 (stmt)


Состояние 122

   15 stmt: nonexec_stmt COMMENT .

    $default  вывод с использованием правила 15 (stmt)


Состояние 123

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   58 fn_def: FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 156


Состояние 124

   60 fn_def: FUNCTION SYMNAME LEFT_PARENT exp_list . RIGHT_PARENT stmts END
   69 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 157
    COMMA         сдвиг, и переход в состояние 153


Состояние 125

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   62 fn_def: SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 158


Состояние 126

   63 fn_def: SUBROUTINE SYMNAME LEFT_PARENT exp_list . RIGHT_PARENT stmts END
   69 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 159
    COMMA         сдвиг, и переход в состояние 153


Состояние 127

   61 fn_def: SUBROUTINE SYMNAME stmts END .

    $default  вывод с использованием правила 61 (fn_def)


Состояние 128

   66 fn_call: CALL SYMNAME LEFT_PARENT RIGHT_PARENT .

    $default  вывод с использованием правила 66 (fn_call)


Состояние 129

   67 fn_call: CALL SYMNAME LEFT_PARENT exp_list . RIGHT_PARENT
   69 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 160
    COMMA         сдвиг, и переход в состояние 153


Состояние 130

   29 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts elseif_stmt ENDIF

    THEN  сдвиг, и переход в состояние 161


Состояние 131

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   37        | DO WHILE aexp stmts . ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    ENDDO       сдвиг, и переход в состояние 162
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 132

   35 do_stmt: DO SYMNAME EQUAL aexp . COMMA aexp stmts ENDDO
   36        | DO SYMNAME EQUAL aexp . COMMA aexp COMMA aexp stmts ENDDO
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    COMMA  сдвиг, и переход в состояние 163
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103


Состояние 133

   44 read_stmt: READ LEFT_PARENT format COMMA . format RIGHT_PARENT aexp
   49 format: . MUL
   50       | . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    MUL          сдвиг, и переход в состояние 48
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    format   переход в состояние 164
    fn_call  переход в состояние 55
    aexp     переход в состояние 56


Состояние 134

   76 aexp: LEFT_PARENT aexp RIGHT_PARENT .

    $default  вывод с использованием правила 76 (aexp)


Состояние 135

   64 fn_call: SYMNAME LEFT_PARENT RIGHT_PARENT .

    $default  вывод с использованием правила 64 (fn_call)


Состояние 136

   65 fn_call: SYMNAME LEFT_PARENT exp_list . RIGHT_PARENT
   69 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 165
    COMMA         сдвиг, и переход в состояние 153


Состояние 137

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   80     | aexp ADD aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, TYPE]
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    MUL   сдвиг, и переход в состояние 95
    POW   сдвиг, и переход в состояние 96
    DIV   сдвиг, и переход в состояние 97
    OR    сдвиг, и переход в состояние 99
    XOR   сдвиг, и переход в состояние 100
    AND   сдвиг, и переход в состояние 101
    EQV   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 80 (aexp)

    Conflict between rule 80 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 80 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 80 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 80 and token POW resolved as shift (ADD < POW).
    Conflict between rule 80 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 80 and token CMP resolved as reduce (CMP < ADD).
    Conflict between rule 80 and token OR resolved as shift (ADD < OR).
    Conflict between rule 80 and token XOR resolved as shift (ADD < XOR).
    Conflict between rule 80 and token AND resolved as shift (ADD < AND).
    Conflict between rule 80 and token EQV resolved as shift (ADD < EQV).
    Conflict between rule 80 and token NEQV resolved as shift (ADD < NEQV).


Состояние 138

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   81     | aexp MINUS aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, TYPE]
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    MUL   сдвиг, и переход в состояние 95
    POW   сдвиг, и переход в состояние 96
    DIV   сдвиг, и переход в состояние 97
    OR    сдвиг, и переход в состояние 99
    XOR   сдвиг, и переход в состояние 100
    AND   сдвиг, и переход в состояние 101
    EQV   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 81 (aexp)

    Conflict between rule 81 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 81 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 81 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 81 and token POW resolved as shift (MINUS < POW).
    Conflict between rule 81 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 81 and token CMP resolved as reduce (CMP < MINUS).
    Conflict between rule 81 and token OR resolved as shift (MINUS < OR).
    Conflict between rule 81 and token XOR resolved as shift (MINUS < XOR).
    Conflict between rule 81 and token AND resolved as shift (MINUS < AND).
    Conflict between rule 81 and token EQV resolved as shift (MINUS < EQV).
    Conflict between rule 81 and token NEQV resolved as shift (MINUS < NEQV).


Состояние 139

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   78     | aexp MUL aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, DIV, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, TYPE]
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    POW   сдвиг, и переход в состояние 96
    OR    сдвиг, и переход в состояние 99
    XOR   сдвиг, и переход в состояние 100
    AND   сдвиг, и переход в состояние 101
    EQV   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 78 (aexp)

    Conflict between rule 78 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 78 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 78 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 78 and token POW resolved as shift (MUL < POW).
    Conflict between rule 78 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 78 and token CMP resolved as reduce (CMP < MUL).
    Conflict between rule 78 and token OR resolved as shift (MUL < OR).
    Conflict between rule 78 and token XOR resolved as shift (MUL < XOR).
    Conflict between rule 78 and token AND resolved as shift (MUL < AND).
    Conflict between rule 78 and token EQV resolved as shift (MUL < EQV).
    Conflict between rule 78 and token NEQV resolved as shift (MUL < NEQV).


Состояние 140

   77 aexp: aexp . POW aexp
   77     | aexp POW aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, DIV, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, TYPE]
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    POW   сдвиг, и переход в состояние 96
    OR    сдвиг, и переход в состояние 99
    XOR   сдвиг, и переход в состояние 100
    AND   сдвиг, и переход в состояние 101
    EQV   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 77 (aexp)

    Conflict between rule 77 and token ADD resolved as reduce (ADD < POW).
    Conflict between rule 77 and token MINUS resolved as reduce (MINUS < POW).
    Conflict between rule 77 and token MUL resolved as reduce (MUL < POW).
    Conflict between rule 77 and token POW resolved as shift (%right POW).
    Conflict between rule 77 and token DIV resolved as reduce (DIV < POW).
    Conflict between rule 77 and token CMP resolved as reduce (CMP < POW).
    Conflict between rule 77 and token OR resolved as shift (POW < OR).
    Conflict between rule 77 and token XOR resolved as shift (POW < XOR).
    Conflict between rule 77 and token AND resolved as shift (POW < AND).
    Conflict between rule 77 and token EQV resolved as shift (POW < EQV).
    Conflict between rule 77 and token NEQV resolved as shift (POW < NEQV).


Состояние 141

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   79     | aexp DIV aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, DIV, RIGHT_PARENT, COMMA, CMP, COMMENT, SYMNAME, TYPE]
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    POW   сдвиг, и переход в состояние 96
    OR    сдвиг, и переход в состояние 99
    XOR   сдвиг, и переход в состояние 100
    AND   сдвиг, и переход в состояние 101
    EQV   сдвиг, и переход в состояние 102
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 79 (aexp)

    Conflict between rule 79 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 79 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 79 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 79 and token POW resolved as shift (DIV < POW).
    Conflict between rule 79 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 79 and token CMP resolved as reduce (CMP < DIV).
    Conflict between rule 79 and token OR resolved as shift (DIV < OR).
    Conflict between rule 79 and token XOR resolved as shift (DIV < XOR).
    Conflict between rule 79 and token AND resolved as shift (DIV < AND).
    Conflict between rule 79 and token EQV resolved as shift (DIV < EQV).
    Conflict between rule 79 and token NEQV resolved as shift (DIV < NEQV).


Состояние 142

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   83     | aexp CMP aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, RIGHT_PARENT, COMMA, COMMENT, SYMNAME, TYPE]
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    CMP  ошибка (неассоциативная)

    $default  вывод с использованием правила 83 (aexp)

    Conflict between rule 83 and token ADD resolved as shift (CMP < ADD).
    Conflict between rule 83 and token MINUS resolved as shift (CMP < MINUS).
    Conflict between rule 83 and token MUL resolved as shift (CMP < MUL).
    Conflict between rule 83 and token POW resolved as shift (CMP < POW).
    Conflict between rule 83 and token DIV resolved as shift (CMP < DIV).
    Conflict between rule 83 and token CMP resolved as an error (%nonassoc CMP).
    Conflict between rule 83 and token OR resolved as shift (CMP < OR).
    Conflict between rule 83 and token XOR resolved as shift (CMP < XOR).
    Conflict between rule 83 and token AND resolved as shift (CMP < AND).
    Conflict between rule 83 and token EQV resolved as shift (CMP < EQV).
    Conflict between rule 83 and token NEQV resolved as shift (CMP < NEQV).


Состояние 143

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   86     | aexp OR aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, EQV, COMMENT, SYMNAME, TYPE]
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    XOR   сдвиг, и переход в состояние 100
    AND   сдвиг, и переход в состояние 101
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 86 (aexp)

    Conflict between rule 86 and token ADD resolved as reduce (ADD < OR).
    Conflict between rule 86 and token MINUS resolved as reduce (MINUS < OR).
    Conflict between rule 86 and token MUL resolved as reduce (MUL < OR).
    Conflict between rule 86 and token POW resolved as reduce (POW < OR).
    Conflict between rule 86 and token DIV resolved as reduce (DIV < OR).
    Conflict between rule 86 and token CMP resolved as reduce (CMP < OR).
    Conflict between rule 86 and token OR resolved as reduce (%left OR).
    Conflict between rule 86 and token XOR resolved as shift (OR < XOR).
    Conflict between rule 86 and token AND resolved as shift (OR < AND).
    Conflict between rule 86 and token EQV resolved as reduce (EQV < OR).
    Conflict between rule 86 and token NEQV resolved as shift (OR < NEQV).


Состояние 144

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp
   88     | aexp XOR aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, EQV, COMMENT, SYMNAME, TYPE]

    AND   сдвиг, и переход в состояние 101
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 88 (aexp)

    Conflict between rule 88 and token ADD resolved as reduce (ADD < XOR).
    Conflict between rule 88 and token MINUS resolved as reduce (MINUS < XOR).
    Conflict between rule 88 and token MUL resolved as reduce (MUL < XOR).
    Conflict between rule 88 and token POW resolved as reduce (POW < XOR).
    Conflict between rule 88 and token DIV resolved as reduce (DIV < XOR).
    Conflict between rule 88 and token CMP resolved as reduce (CMP < XOR).
    Conflict between rule 88 and token OR resolved as reduce (OR < XOR).
    Conflict between rule 88 and token XOR resolved as reduce (%left XOR).
    Conflict between rule 88 and token AND resolved as shift (XOR < AND).
    Conflict between rule 88 and token EQV resolved as reduce (EQV < XOR).
    Conflict between rule 88 and token NEQV resolved as shift (XOR < NEQV).


Состояние 145

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   87     | aexp AND aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, AND, EQV, COMMENT, SYMNAME, TYPE]
   88     | aexp . XOR aexp

    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 87 (aexp)

    Conflict between rule 87 and token ADD resolved as reduce (ADD < AND).
    Conflict between rule 87 and token MINUS resolved as reduce (MINUS < AND).
    Conflict between rule 87 and token MUL resolved as reduce (MUL < AND).
    Conflict between rule 87 and token POW resolved as reduce (POW < AND).
    Conflict between rule 87 and token DIV resolved as reduce (DIV < AND).
    Conflict between rule 87 and token CMP resolved as reduce (CMP < AND).
    Conflict between rule 87 and token OR resolved as reduce (OR < AND).
    Conflict between rule 87 and token XOR resolved as reduce (XOR < AND).
    Conflict between rule 87 and token AND resolved as reduce (%left AND).
    Conflict between rule 87 and token EQV resolved as reduce (EQV < AND).
    Conflict between rule 87 and token NEQV resolved as shift (AND < NEQV).


Состояние 146

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   84     | aexp EQV aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, EQV, COMMENT, SYMNAME, TYPE]
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    OR    сдвиг, и переход в состояние 99
    XOR   сдвиг, и переход в состояние 100
    AND   сдвиг, и переход в состояние 101
    NEQV  сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 84 (aexp)

    Conflict between rule 84 and token ADD resolved as reduce (ADD < EQV).
    Conflict between rule 84 and token MINUS resolved as reduce (MINUS < EQV).
    Conflict between rule 84 and token MUL resolved as reduce (MUL < EQV).
    Conflict between rule 84 and token POW resolved as reduce (POW < EQV).
    Conflict between rule 84 and token DIV resolved as reduce (DIV < EQV).
    Conflict between rule 84 and token CMP resolved as reduce (CMP < EQV).
    Conflict between rule 84 and token OR resolved as shift (EQV < OR).
    Conflict between rule 84 and token XOR resolved as shift (EQV < XOR).
    Conflict between rule 84 and token AND resolved as shift (EQV < AND).
    Conflict between rule 84 and token EQV resolved as reduce (%left EQV).
    Conflict between rule 84 and token NEQV resolved as shift (EQV < NEQV).


Состояние 147

   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   85     | aexp NEQV aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, ADD, MINUS, MUL, POW, DIV, RIGHT_PARENT, COMMA, CMP, OR, XOR, AND, EQV, NEQV, COMMENT, SYMNAME, TYPE]
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    $default  вывод с использованием правила 85 (aexp)

    Conflict between rule 85 and token ADD resolved as reduce (ADD < NEQV).
    Conflict between rule 85 and token MINUS resolved as reduce (MINUS < NEQV).
    Conflict between rule 85 and token MUL resolved as reduce (MUL < NEQV).
    Conflict between rule 85 and token POW resolved as reduce (POW < NEQV).
    Conflict between rule 85 and token DIV resolved as reduce (DIV < NEQV).
    Conflict between rule 85 and token CMP resolved as reduce (CMP < NEQV).
    Conflict between rule 85 and token OR resolved as reduce (OR < NEQV).
    Conflict between rule 85 and token XOR resolved as reduce (XOR < NEQV).
    Conflict between rule 85 and token AND resolved as reduce (AND < NEQV).
    Conflict between rule 85 and token EQV resolved as reduce (EQV < NEQV).
    Conflict between rule 85 and token NEQV resolved as reduce (%left NEQV).


Состояние 148

   46 write_stmt: WRITE LEFT_PARENT format COMMA . format RIGHT_PARENT exp_list
   49 format: . MUL
   50       | . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    MUL          сдвиг, и переход в состояние 48
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    format   переход в состояние 166
    fn_call  переход в состояние 55
    aexp     переход в состояние 56


Состояние 149

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA . AFILE EQUAL aexp RIGHT_PARENT

    AFILE  сдвиг, и переход в состояние 167


Состояние 150

   42 io_stmt: CLOSE LEFT_PARENT aexp RIGHT_PARENT .

    $default  вывод с использованием правила 42 (io_stmt)


Состояние 151

   55 fn_def: SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 168


Состояние 152

   56 fn_def: SYMNAME LEFT_PARENT exp_list RIGHT_PARENT . EQUAL aexp
   65 fn_call: SYMNAME LEFT_PARENT exp_list RIGHT_PARENT .  [COMMENT]

    EQUAL  сдвиг, и переход в состояние 169

    $default  вывод с использованием правила 65 (fn_call)


Состояние 153

   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   69 exp_list: exp_list COMMA . aexp
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 170


Состояние 154

    1 program: program_head program_body program_end END_OF_FILE .

    $default  вывод с использованием правила 1 (program)


Состояние 155

   57 fn_def: type FUNCTION SYMNAME LEFT_PARENT . RIGHT_PARENT stmts END
   59       | type FUNCTION SYMNAME LEFT_PARENT . exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   68 exp_list: . aexp
   69         | . exp_list COMMA aexp
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL          сдвиг, и переход в состояние 5
    MINUS         сдвиг, и переход в состояние 47
    LEFT_PARENT   сдвиг, и переход в состояние 58
    RIGHT_PARENT  сдвиг, и переход в состояние 171
    NOT           сдвиг, и переход в состояние 50
    SYMNAME       сдвиг, и переход в состояние 51
    CHARS         сдвиг, и переход в состояние 52
    NUMBER        сдвиг, и переход в состояние 53

    fn_call   переход в состояние 55
    exp_list  переход в состояние 172
    aexp      переход в состояние 111


Состояние 156

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts . END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    END         сдвиг, и переход в состояние 173
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 157

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   60 fn_def: FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 174


Состояние 158

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   62       | SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts . END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    END         сдвиг, и переход в состояние 175
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 159

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   63 fn_def: SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 176


Состояние 160

   67 fn_call: CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT .

    $default  вывод с использованием правила 67 (fn_call)


Состояние 161

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   29 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts elseif_stmt ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts elseif_stmt ENDIF

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 177


Состояние 162

   37 do_stmt: DO WHILE aexp stmts ENDDO .

    $default  вывод с использованием правила 37 (do_stmt)


Состояние 163

   35 do_stmt: DO SYMNAME EQUAL aexp COMMA . aexp stmts ENDDO
   36        | DO SYMNAME EQUAL aexp COMMA . aexp COMMA aexp stmts ENDDO
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 178


Состояние 164

   44 read_stmt: READ LEFT_PARENT format COMMA format . RIGHT_PARENT aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 179


Состояние 165

   65 fn_call: SYMNAME LEFT_PARENT exp_list RIGHT_PARENT .

    $default  вывод с использованием правила 65 (fn_call)


Состояние 166

   46 write_stmt: WRITE LEFT_PARENT format COMMA format . RIGHT_PARENT exp_list

    RIGHT_PARENT  сдвиг, и переход в состояние 180


Состояние 167

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA AFILE . EQUAL aexp RIGHT_PARENT

    EQUAL  сдвиг, и переход в состояние 181


Состояние 168

   55 fn_def: SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMENT, SYMNAME, TYPE]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 55 (fn_def)


Состояние 169

   56 fn_def: SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 182


Состояние 170

   69 exp_list: exp_list COMMA aexp .  [RIGHT_PARENT, COMMA, COMMENT]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 69 (exp_list)


Состояние 171

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   57 fn_def: type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 183


Состояние 172

   59 fn_def: type FUNCTION SYMNAME LEFT_PARENT exp_list . RIGHT_PARENT stmts END
   69 exp_list: exp_list . COMMA aexp

    RIGHT_PARENT  сдвиг, и переход в состояние 184
    COMMA         сдвиг, и переход в состояние 153


Состояние 173

   58 fn_def: FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 58 (fn_def)


Состояние 174

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts . END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    END         сдвиг, и переход в состояние 185
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 175

   62 fn_def: SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 62 (fn_def)


Состояние 176

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   63       | SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts . END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    END         сдвиг, и переход в состояние 186
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 177

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   29        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts . ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts . ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts . elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts . elseif_stmt ENDIF
   33 elseif_stmt: . ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts
   34            | . elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    ELSE        сдвиг, и переход в состояние 187
    ELSEIF      сдвиг, и переход в состояние 188
    ENDIF       сдвиг, и переход в состояние 189
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    elseif_stmt   переход в состояние 190
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 178

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   35 do_stmt: DO SYMNAME EQUAL aexp COMMA aexp . stmts ENDDO
   36        | DO SYMNAME EQUAL aexp COMMA aexp . COMMA aexp stmts ENDDO
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD      сдвиг, и переход в состояние 93
    MINUS    сдвиг, и переход в состояние 94
    MUL      сдвиг, и переход в состояние 95
    POW      сдвиг, и переход в состояние 96
    DIV      сдвиг, и переход в состояние 97
    COMMA    сдвиг, и переход в состояние 191
    CMP      сдвиг, и переход в состояние 98
    OR       сдвиг, и переход в состояние 99
    XOR      сдвиг, и переход в состояние 100
    AND      сдвиг, и переход в состояние 101
    EQV      сдвиг, и переход в состояние 102
    NEQV     сдвиг, и переход в состояние 103
    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 192


Состояние 179

   44 read_stmt: READ LEFT_PARENT format COMMA format RIGHT_PARENT . aexp
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 193


Состояние 180

   46 write_stmt: WRITE LEFT_PARENT format COMMA format RIGHT_PARENT . exp_list
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   68 exp_list: . aexp
   69         | . exp_list COMMA aexp
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call   переход в состояние 55
    exp_list  переход в состояние 194
    aexp      переход в состояние 111


Состояние 181

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA AFILE EQUAL . aexp RIGHT_PARENT
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 195


Состояние 182

   56 fn_def: SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp .  [PROGRAM, FUNCTION, SUBROUTINE, RETURN, CALL, GOTO, STOP, PAUSE, IF, DO, BREAK, CONTINUE, READ, WRITE, PRINT, OPEN, CLOSE, COMMENT, SYMNAME, TYPE]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 56 (fn_def)


Состояние 183

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   57       | type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts . END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    END         сдвиг, и переход в состояние 196
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 184

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   59 fn_def: type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT . stmts END

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 197


Состояние 185

   60 fn_def: FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 60 (fn_def)


Состояние 186

   63 fn_def: SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 63 (fn_def)


Состояние 187

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   30 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE . stmts ENDIF

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 198


Состояние 188

   33 elseif_stmt: ELSEIF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts

    LEFT_PARENT  сдвиг, и переход в состояние 199


Состояние 189

   29 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF .

    $default  вывод с использованием правила 29 (if_stmt)


Состояние 190

   31 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt . ELSE stmts ENDIF
   32        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt . ENDIF
   34 elseif_stmt: elseif_stmt . ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts

    ELSE    сдвиг, и переход в состояние 200
    ELSEIF  сдвиг, и переход в состояние 201
    ENDIF   сдвиг, и переход в состояние 202


Состояние 191

   36 do_stmt: DO SYMNAME EQUAL aexp COMMA aexp COMMA . aexp stmts ENDDO
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 203


Состояние 192

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   35        | DO SYMNAME EQUAL aexp COMMA aexp stmts . ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    ENDDO       сдвиг, и переход в состояние 204
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 193

   44 read_stmt: READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp .  [COMMA, COMMENT]
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD    сдвиг, и переход в состояние 93
    MINUS  сдвиг, и переход в состояние 94
    MUL    сдвиг, и переход в состояние 95
    POW    сдвиг, и переход в состояние 96
    DIV    сдвиг, и переход в состояние 97
    CMP    сдвиг, и переход в состояние 98
    OR     сдвиг, и переход в состояние 99
    XOR    сдвиг, и переход в состояние 100
    AND    сдвиг, и переход в состояние 101
    EQV    сдвиг, и переход в состояние 102
    NEQV   сдвиг, и переход в состояние 103

    $default  вывод с использованием правила 44 (read_stmt)


Состояние 194

   46 write_stmt: WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list .  [COMMENT]
   69 exp_list: exp_list . COMMA aexp

    COMMA  сдвиг, и переход в состояние 153

    $default  вывод с использованием правила 46 (write_stmt)


Состояние 195

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp . RIGHT_PARENT
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 93
    MINUS         сдвиг, и переход в состояние 94
    MUL           сдвиг, и переход в состояние 95
    POW           сдвиг, и переход в состояние 96
    DIV           сдвиг, и переход в состояние 97
    RIGHT_PARENT  сдвиг, и переход в состояние 205
    CMP           сдвиг, и переход в состояние 98
    OR            сдвиг, и переход в состояние 99
    XOR           сдвиг, и переход в состояние 100
    AND           сдвиг, и переход в состояние 101
    EQV           сдвиг, и переход в состояние 102
    NEQV          сдвиг, и переход в состояние 103


Состояние 196

   57 fn_def: type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 57 (fn_def)


Состояние 197

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   59       | type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts . END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    END         сдвиг, и переход в состояние 206
    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 198

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   30        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts . ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    ENDIF       сдвиг, и переход в состояние 207
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 199

   33 elseif_stmt: ELSEIF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 208


Состояние 200

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   31 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE . stmts ENDIF

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 209


Состояние 201

   34 elseif_stmt: elseif_stmt ELSEIF . LEFT_PARENT aexp RIGHT_PARENT THEN stmts

    LEFT_PARENT  сдвиг, и переход в состояние 210


Состояние 202

   32 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF .

    $default  вывод с использованием правила 32 (if_stmt)


Состояние 203

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   36 do_stmt: DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp . stmts ENDDO
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD      сдвиг, и переход в состояние 93
    MINUS    сдвиг, и переход в состояние 94
    MUL      сдвиг, и переход в состояние 95
    POW      сдвиг, и переход в состояние 96
    DIV      сдвиг, и переход в состояние 97
    CMP      сдвиг, и переход в состояние 98
    OR       сдвиг, и переход в состояние 99
    XOR      сдвиг, и переход в состояние 100
    AND      сдвиг, и переход в состояние 101
    EQV      сдвиг, и переход в состояние 102
    NEQV     сдвиг, и переход в состояние 103
    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 211


Состояние 204

   35 do_stmt: DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO .

    $default  вывод с использованием правила 35 (do_stmt)


Состояние 205

   41 io_stmt: OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT .

    $default  вывод с использованием правила 41 (io_stmt)


Состояние 206

   59 fn_def: type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END .

    $default  вывод с использованием правила 59 (fn_def)


Состояние 207

   30 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF .

    $default  вывод с использованием правила 30 (if_stmt)


Состояние 208

   33 elseif_stmt: ELSEIF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 93
    MINUS         сдвиг, и переход в состояние 94
    MUL           сдвиг, и переход в состояние 95
    POW           сдвиг, и переход в состояние 96
    DIV           сдвиг, и переход в состояние 97
    RIGHT_PARENT  сдвиг, и переход в состояние 212
    CMP           сдвиг, и переход в состояние 98
    OR            сдвиг, и переход в состояние 99
    XOR           сдвиг, и переход в состояние 100
    AND           сдвиг, и переход в состояние 101
    EQV           сдвиг, и переход в состояние 102
    NEQV          сдвиг, и переход в состояние 103


Состояние 209

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   31        | IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts . ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    ENDIF       сдвиг, и переход в состояние 213
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 210

   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT . aexp RIGHT_PARENT THEN stmts
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   72 aexp: . fn_call
   73     | . NUMBER
   74     | . CHARS
   75     | . SYMNAME
   76     | . LEFT_PARENT aexp RIGHT_PARENT
   77     | . aexp POW aexp
   78     | . aexp MUL aexp
   79     | . aexp DIV aexp
   80     | . aexp ADD aexp
   81     | . aexp MINUS aexp
   82     | . MINUS aexp
   83     | . aexp CMP aexp
   84     | . aexp EQV aexp
   85     | . aexp NEQV aexp
   86     | . aexp OR aexp
   87     | . aexp AND aexp
   88     | . aexp XOR aexp
   89     | . NOT aexp

    CALL         сдвиг, и переход в состояние 5
    MINUS        сдвиг, и переход в состояние 47
    LEFT_PARENT  сдвиг, и переход в состояние 58
    NOT          сдвиг, и переход в состояние 50
    SYMNAME      сдвиг, и переход в состояние 51
    CHARS        сдвиг, и переход в состояние 52
    NUMBER       сдвиг, и переход в состояние 53

    fn_call  переход в состояние 55
    aexp     переход в состояние 214


Состояние 211

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   36        | DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts . ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    ENDDO       сдвиг, и переход в состояние 215
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 212

   33 elseif_stmt: ELSEIF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts

    THEN  сдвиг, и переход в состояние 216


Состояние 213

   31 if_stmt: IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF .

    $default  вывод с использованием правила 31 (if_stmt)


Состояние 214

   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT aexp . RIGHT_PARENT THEN stmts
   77 aexp: aexp . POW aexp
   78     | aexp . MUL aexp
   79     | aexp . DIV aexp
   80     | aexp . ADD aexp
   81     | aexp . MINUS aexp
   83     | aexp . CMP aexp
   84     | aexp . EQV aexp
   85     | aexp . NEQV aexp
   86     | aexp . OR aexp
   87     | aexp . AND aexp
   88     | aexp . XOR aexp

    ADD           сдвиг, и переход в состояние 93
    MINUS         сдвиг, и переход в состояние 94
    MUL           сдвиг, и переход в состояние 95
    POW           сдвиг, и переход в состояние 96
    DIV           сдвиг, и переход в состояние 97
    RIGHT_PARENT  сдвиг, и переход в состояние 217
    CMP           сдвиг, и переход в состояние 98
    OR            сдвиг, и переход в состояние 99
    XOR           сдвиг, и переход в состояние 100
    AND           сдвиг, и переход в состояние 101
    EQV           сдвиг, и переход в состояние 102
    NEQV          сдвиг, и переход в состояние 103


Состояние 215

   36 do_stmt: DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO .

    $default  вывод с использованием правила 36 (do_stmt)


Состояние 216

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   33 elseif_stmt: ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 218


Состояние 217

   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT . THEN stmts

    THEN  сдвиг, и переход в состояние 219


Состояние 218

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   33 elseif_stmt: ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts .  [ELSE, ELSEIF, ENDIF]
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    $default  вывод с использованием правила 33 (elseif_stmt)

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37


Состояние 219

   11 stmts: . COMMENT
   12      | . stmts COMMENT
   13      | . stmts stmt
   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN . stmts

    COMMENT  сдвиг, и переход в состояние 38

    stmts  переход в состояние 220


Состояние 220

   12 stmts: stmts . COMMENT
   13      | stmts . stmt
   14 stmt: . exec_stmt COMMENT
   15     | . nonexec_stmt COMMENT
   16 exec_stmt: . assign_stmt
   17          | . control_stmt
   18          | . io_stmt
   19 assign_stmt: . SYMNAME EQUAL aexp
   20 control_stmt: . if_stmt
   21             | . do_stmt
   22             | . fn_call
   23             | . GOTO
   24             | . CONTINUE
   25             | . RETURN
   26             | . BREAK
   27             | . STOP
   28             | . PAUSE NUMBER
   29 if_stmt: . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ENDIF
   30        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts ELSE stmts ENDIF
   31        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ELSE stmts ENDIF
   32        | . IF LEFT_PARENT aexp RIGHT_PARENT THEN stmts elseif_stmt ENDIF
   34 elseif_stmt: elseif_stmt ELSEIF LEFT_PARENT aexp RIGHT_PARENT THEN stmts .  [ELSE, ELSEIF, ENDIF]
   35 do_stmt: . DO SYMNAME EQUAL aexp COMMA aexp stmts ENDDO
   36        | . DO SYMNAME EQUAL aexp COMMA aexp COMMA aexp stmts ENDDO
   37        | . DO WHILE aexp stmts ENDDO
   38 io_stmt: . read_stmt
   39        | . write_stmt
   40        | . print_stmt
   41        | . OPEN LEFT_PARENT aexp COMMA AFILE EQUAL aexp RIGHT_PARENT
   42        | . CLOSE LEFT_PARENT aexp RIGHT_PARENT
   43 read_stmt: . READ format
   44          | . READ LEFT_PARENT format COMMA format RIGHT_PARENT aexp
   45          | . read_stmt COMMA aexp
   46 write_stmt: . WRITE LEFT_PARENT format COMMA format RIGHT_PARENT exp_list
   47 print_stmt: . PRINT format
   48           | . print_stmt COMMA aexp
   51 nonexec_stmt: . fn_def
   52             | . var_def
   53 var_def: . type SYMNAME
   54        | . var_def COMMA SYMNAME
   55 fn_def: . SYMNAME LEFT_PARENT RIGHT_PARENT EQUAL aexp
   56       | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT EQUAL aexp
   57       | . type FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   58       | . FUNCTION SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   59       | . type FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   60       | . FUNCTION SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   61       | . SUBROUTINE SYMNAME stmts END
   62       | . SUBROUTINE SYMNAME LEFT_PARENT RIGHT_PARENT stmts END
   63       | . SUBROUTINE SYMNAME LEFT_PARENT exp_list RIGHT_PARENT stmts END
   64 fn_call: . SYMNAME LEFT_PARENT RIGHT_PARENT
   65        | . SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   66        | . CALL SYMNAME LEFT_PARENT RIGHT_PARENT
   67        | . CALL SYMNAME LEFT_PARENT exp_list RIGHT_PARENT
   70 type: . TYPE
   71     | . TYPE MUL NUMBER

    FUNCTION    сдвиг, и переход в состояние 2
    SUBROUTINE  сдвиг, и переход в состояние 3
    RETURN      сдвиг, и переход в состояние 4
    CALL        сдвиг, и переход в состояние 5
    GOTO        сдвиг, и переход в состояние 6
    STOP        сдвиг, и переход в состояние 7
    PAUSE       сдвиг, и переход в состояние 8
    IF          сдвиг, и переход в состояние 9
    DO          сдвиг, и переход в состояние 10
    BREAK       сдвиг, и переход в состояние 11
    CONTINUE    сдвиг, и переход в состояние 12
    READ        сдвиг, и переход в состояние 13
    WRITE       сдвиг, и переход в состояние 14
    PRINT       сдвиг, и переход в состояние 15
    OPEN        сдвиг, и переход в состояние 16
    CLOSE       сдвиг, и переход в состояние 17
    COMMENT     сдвиг, и переход в состояние 77
    SYMNAME     сдвиг, и переход в состояние 19
    TYPE        сдвиг, и переход в состояние 20

    $default  вывод с использованием правила 34 (elseif_stmt)

    stmt          переход в состояние 78
    exec_stmt     переход в состояние 79
    assign_stmt   переход в состояние 25
    control_stmt  переход в состояние 26
    if_stmt       переход в состояние 27
    do_stmt       переход в состояние 28
    io_stmt       переход в состояние 29
    read_stmt     переход в состояние 30
    write_stmt    переход в состояние 31
    print_stmt    переход в состояние 32
    nonexec_stmt  переход в состояние 80
    var_def       переход в состояние 34
    fn_def        переход в состояние 35
    fn_call       переход в состояние 36
    type          переход в состояние 37
